[{"C:\\react\\webFin-frontend\\frontend\\src\\index.js":"1","C:\\react\\webFin-frontend\\frontend\\src\\components\\hoc\\PrivateRoute.js":"2","C:\\react\\webFin-frontend\\frontend\\src\\components\\hoc\\PublicRoute.js":"3","C:\\react\\webFin-frontend\\frontend\\src\\components\\hoc\\RegisterRoute.js":"4","C:\\react\\webFin-frontend\\frontend\\src\\components\\hoc\\ConfirmAccountRoute.js":"5","C:\\react\\webFin-frontend\\frontend\\src\\pages\\404.js":"6","C:\\react\\webFin-frontend\\frontend\\src\\actions\\user\\auth.js":"7","C:\\react\\webFin-frontend\\frontend\\src\\actions\\assessments\\index.js":"8","C:\\react\\webFin-frontend\\frontend\\src\\actions\\assessments\\actionTypes.js":"9","C:\\react\\webFin-frontend\\frontend\\src\\components\\core\\loader\\index.js":"10","C:\\react\\webFin-frontend\\frontend\\src\\reducers\\user.js":"11","C:\\react\\webFin-frontend\\frontend\\src\\pages\\oauth2\\redirect\\index.js":"12","C:\\react\\webFin-frontend\\frontend\\src\\components\\assessment\\shared\\FontStyleModal.js":"13","C:\\react\\webFin-frontend\\frontend\\src\\components\\homepage\\index.js":"14","C:\\react\\webFin-frontend\\frontend\\src\\components\\shared\\Layout.js":"15","C:\\react\\webFin-frontend\\frontend\\src\\constants\\app.js":"16","C:\\react\\webFin-frontend\\frontend\\src\\components\\assessment\\shared\\TemplateLayoutOne.js":"17","C:\\react\\webFin-frontend\\frontend\\src\\components\\assessment\\StepTwo.js":"18","C:\\react\\webFin-frontend\\frontend\\src\\middleware\\auth.js":"19","C:\\react\\webFin-frontend\\frontend\\src\\utils\\validates.js":"20","C:\\react\\webFin-frontend\\frontend\\src\\services\\api.js":"21","C:\\react\\webFin-frontend\\frontend\\src\\reportWebVitals.js":"22","C:\\react\\webFin-frontend\\frontend\\src\\components\\forget-password\\OtpForm.js":"23","C:\\react\\webFin-frontend\\frontend\\src\\components\\TermsCondition.js":"24","C:\\react\\webFin-frontend\\frontend\\src\\actions\\user\\actionTypes.js":"25","C:\\react\\webFin-frontend\\frontend\\src\\utils\\svg.js":"26","C:\\react\\webFin-frontend\\frontend\\src\\components\\shared\\Navbar.js":"27","C:\\react\\webFin-frontend\\frontend\\src\\pages\\assessment\\index.js":"28","C:\\react\\webFin-frontend\\frontend\\src\\components\\forget-password\\ResetPasswordForm.js":"29","C:\\react\\webFin-frontend\\frontend\\src\\components\\assessment\\shared\\UploadImageModal.js":"30","C:\\react\\webFin-frontend\\frontend\\src\\App.js":"31","C:\\react\\webFin-frontend\\frontend\\src\\pages\\register\\index.js":"32","C:\\react\\webFin-frontend\\frontend\\src\\components\\shared\\Footer.js":"33","C:\\react\\webFin-frontend\\frontend\\src\\middleware\\blog.js":"34","C:\\react\\webFin-frontend\\frontend\\src\\middleware\\assessments\\index.js":"35","C:\\react\\webFin-frontend\\frontend\\src\\actions\\blog\\actionTypes.js":"36","C:\\react\\webFin-frontend\\frontend\\src\\utils\\history.js":"37","C:\\react\\webFin-frontend\\frontend\\src\\pages\\blog\\rte.js":"38","C:\\react\\webFin-frontend\\frontend\\src\\components\\PrivacyPolicy.js":"39","C:\\react\\webFin-frontend\\frontend\\src\\services\\strapiApi.js":"40","C:\\react\\webFin-frontend\\frontend\\src\\store.js":"41","C:\\react\\webFin-frontend\\frontend\\src\\constants\\appRoutes.js":"42","C:\\react\\webFin-frontend\\frontend\\src\\reducers\\index.js":"43","C:\\react\\webFin-frontend\\frontend\\src\\pages\\terms-conditions\\index.js":"44","C:\\react\\webFin-frontend\\frontend\\src\\pages\\dashboard\\index.js":"45","C:\\react\\webFin-frontend\\frontend\\src\\pages\\login\\index.js":"46","C:\\react\\webFin-frontend\\frontend\\src\\pages\\privacy-policy\\index.js":"47","C:\\react\\webFin-frontend\\frontend\\src\\pages\\forget-password\\index.js":"48","C:\\react\\webFin-frontend\\frontend\\src\\pages\\blog\\index.js":"49","C:\\react\\webFin-frontend\\frontend\\src\\pages\\confirm-account\\index.js":"50","C:\\react\\webFin-frontend\\frontend\\src\\utils\\helpers.js":"51","C:\\react\\webFin-frontend\\frontend\\src\\reducers\\assessment.js":"52","C:\\react\\webFin-frontend\\frontend\\src\\services\\notification\\index.js":"53","C:\\react\\webFin-frontend\\frontend\\src\\components\\assessment\\Preview.js":"54","C:\\react\\webFin-frontend\\frontend\\src\\components\\assessment\\StepThree.js":"55","C:\\react\\webFin-frontend\\frontend\\src\\utils\\cache.js":"56","C:\\react\\webFin-frontend\\frontend\\src\\components\\assessment\\StepOne.js":"57","C:\\react\\webFin-frontend\\frontend\\src\\components\\forget-password\\ForgetPasswordForm.js":"58","C:\\react\\webFin-frontend\\frontend\\src\\utils\\formUtils\\index.js":"59","C:\\react\\webFin-frontend\\frontend\\src\\pages\\blog\\components.js":"60","C:\\react\\webFin-frontend\\frontend\\src\\actions\\blog\\index.js":"61","C:\\react\\webFin-frontend\\frontend\\src\\services\\unsplashClient.js":"62","C:\\react\\webFin-frontend\\frontend\\src\\components\\hoc\\AssessmentRoute.js":"63","C:\\react\\webFin-frontend\\frontend\\src\\reducers\\blog.js":"64"},{"size":1330,"mtime":1611581293009,"results":"65","hashOfConfig":"66"},{"size":983,"mtime":1611899680464,"results":"67","hashOfConfig":"66"},{"size":777,"mtime":1611581292979,"results":"68","hashOfConfig":"66"},{"size":1743,"mtime":1611989440038,"results":"69","hashOfConfig":"66"},{"size":740,"mtime":1611581292978,"results":"70","hashOfConfig":"66"},{"size":940,"mtime":1611581293012,"results":"71","hashOfConfig":"66"},{"size":2199,"mtime":1611746906478,"results":"72","hashOfConfig":"66"},{"size":1678,"mtime":1611837291468,"results":"73","hashOfConfig":"66"},{"size":704,"mtime":1611837291466,"results":"74","hashOfConfig":"66"},{"size":495,"mtime":1611581292975,"results":"75","hashOfConfig":"66"},{"size":1895,"mtime":1611581293051,"results":"76","hashOfConfig":"66"},{"size":2218,"mtime":1611989440217,"results":"77","hashOfConfig":"66"},{"size":1319,"mtime":1611571415220,"results":"78","hashOfConfig":"79"},{"size":12231,"mtime":1611746862909,"results":"80","hashOfConfig":"66"},{"size":734,"mtime":1611582924089,"results":"81","hashOfConfig":"66"},{"size":899,"mtime":1612251152644,"results":"82","hashOfConfig":"66"},{"size":421,"mtime":1611581292973,"results":"83","hashOfConfig":"66"},{"size":9524,"mtime":1611997446484,"results":"84","hashOfConfig":"66"},{"size":5414,"mtime":1611997446487,"results":"85","hashOfConfig":"66"},{"size":3542,"mtime":1612251152844,"results":"86","hashOfConfig":"66"},{"size":1120,"mtime":1611581293071,"results":"87","hashOfConfig":"66"},{"size":375,"mtime":1611581293069,"results":"88","hashOfConfig":"66"},{"size":2078,"mtime":1611581292977,"results":"89","hashOfConfig":"66"},{"size":2345,"mtime":1611581292967,"results":"90","hashOfConfig":"66"},{"size":777,"mtime":1611581292964,"results":"91","hashOfConfig":"66"},{"size":46969,"mtime":1611746862954,"results":"92","hashOfConfig":"66"},{"size":4430,"mtime":1612339016001,"results":"93","hashOfConfig":"66"},{"size":2602,"mtime":1611989440114,"results":"94","hashOfConfig":"66"},{"size":5005,"mtime":1612251152625,"results":"95","hashOfConfig":"66"},{"size":4338,"mtime":1612251152597,"results":"96","hashOfConfig":"66"},{"size":2396,"mtime":1611899680461,"results":"97","hashOfConfig":"66"},{"size":8235,"mtime":1612000528339,"results":"98","hashOfConfig":"66"},{"size":6835,"mtime":1611899680468,"results":"99","hashOfConfig":"66"},{"size":1841,"mtime":1612251152680,"results":"100","hashOfConfig":"66"},{"size":3957,"mtime":1612251152665,"results":"101","hashOfConfig":"66"},{"size":288,"mtime":1612251152573,"results":"102","hashOfConfig":"66"},{"size":89,"mtime":1611581293076,"results":"103","hashOfConfig":"66"},{"size":8730,"mtime":1611989440148,"results":"104","hashOfConfig":"66"},{"size":1845,"mtime":1612329993051,"results":"105","hashOfConfig":"66"},{"size":1149,"mtime":1611746906489,"results":"106","hashOfConfig":"66"},{"size":483,"mtime":1611581293074,"results":"107","hashOfConfig":"66"},{"size":381,"mtime":1611746906483,"results":"108","hashOfConfig":"66"},{"size":317,"mtime":1612251152808,"results":"109","hashOfConfig":"66"},{"size":421,"mtime":1611581293023,"results":"110","hashOfConfig":"66"},{"size":3611,"mtime":1612251152728,"results":"111","hashOfConfig":"66"},{"size":5797,"mtime":1611989440178,"results":"112","hashOfConfig":"66"},{"size":399,"mtime":1611581293021,"results":"113","hashOfConfig":"66"},{"size":2597,"mtime":1612251152772,"results":"114","hashOfConfig":"66"},{"size":17103,"mtime":1612251152716,"results":"115","hashOfConfig":"66"},{"size":4093,"mtime":1611581293016,"results":"116","hashOfConfig":"66"},{"size":6414,"mtime":1611989440315,"results":"117","hashOfConfig":"66"},{"size":1677,"mtime":1611837291477,"results":"118","hashOfConfig":"66"},{"size":427,"mtime":1611581293072,"results":"119","hashOfConfig":"66"},{"size":7142,"mtime":1611997446482,"results":"120","hashOfConfig":"66"},{"size":9022,"mtime":1612251152592,"results":"121","hashOfConfig":"66"},{"size":445,"mtime":1611989440279,"results":"122","hashOfConfig":"66"},{"size":5872,"mtime":1611581292970,"results":"123","hashOfConfig":"66"},{"size":2451,"mtime":1611581292977,"results":"124","hashOfConfig":"66"},{"size":10241,"mtime":1611989486600,"results":"125","hashOfConfig":"66"},{"size":3251,"mtime":1611581293014,"results":"126","hashOfConfig":"66"},{"size":864,"mtime":1612251152575,"results":"127","hashOfConfig":"66"},{"size":173,"mtime":1611746906489,"results":"128","hashOfConfig":"66"},{"size":610,"mtime":1611899680464,"results":"129","hashOfConfig":"66"},{"size":915,"mtime":1612251152774,"results":"130","hashOfConfig":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},"15bxvet",{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"133"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"133"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"133"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1noou6o",{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"133"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"133"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"133"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"133"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"133"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"133"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"133"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"133"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"133"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"133"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"133"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"133"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"133"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"133"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"133"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"133"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"133"},"C:\\react\\webFin-frontend\\frontend\\src\\index.js",[],["282","283"],"C:\\react\\webFin-frontend\\frontend\\src\\components\\hoc\\PrivateRoute.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\components\\hoc\\PublicRoute.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\components\\hoc\\RegisterRoute.js",["284"],"import React, { useEffect } from \"react\"\r\nimport { Route, Redirect , withRouter} from \"react-router-dom\"\r\nimport { NOTIFICATION_TYPES } from '../../constants/app'\r\nimport {notification} from '../../services/notification'\r\nimport { isLoggedIn, getUser } from '../../utils/helpers'\r\n\r\n const RegisterRoute = ({ component: Component, ...rest }) => {\r\n  const user = getUser()\r\n  const assessment = sessionStorage.assessmentForm && JSON.parse(sessionStorage.assessmentForm);\r\n  useEffect(() => {\r\n    if(rest.location.pathname === '/register' && !(assessment?.nicheId && assessment?.colourId && assessment?.websiteName && assessment?.domain)){\r\n        notification(NOTIFICATION_TYPES.ERROR, 'Please fill first assessment')\r\n    }\r\n  },[])\r\n\r\n  const isAssessmentSubmit = () => {\r\n    const assessment = sessionStorage.assessmentForm && JSON.parse(sessionStorage.assessmentForm);\r\n    return (assessment?.nicheId && assessment?.colourId && assessment?.websiteName && assessment?.domain)\r\n  }\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn() ? (user.enabled ? (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/dashboard',\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        ) :  <Redirect\r\n              to={{\r\n                pathname: '/confirm-account',\r\n                state: { from: props.location },\r\n              }}\r\n            />): (isAssessmentSubmit() ? \r\n            <Component {...props} /> :  <Redirect\r\n            to={{\r\n              pathname: '/assessment',\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n          )\r\n      }\r\n    />\r\n  )\r\n}\r\nexport default withRouter(RegisterRoute);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\react\\webFin-frontend\\frontend\\src\\components\\hoc\\ConfirmAccountRoute.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\pages\\404.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\actions\\user\\auth.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\actions\\assessments\\index.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\actions\\assessments\\actionTypes.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\components\\core\\loader\\index.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\reducers\\user.js",["285"],"import {ActionTypes} from '../actions/user/actionTypes'\r\nconst initialState = {\r\n    user: {},\r\n    sessionData: {},\r\n    loading: false\r\n}\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case ActionTypes.LOGIN_REQUEST:\r\n        return { ...state, loading: true };\r\n      case ActionTypes.LOGIN_SUCCESS:\r\n        return { ...state, user: action.payload, loading: false };\r\n      case ActionTypes.LOGIN_FAILURE:\r\n        return { ...state, error: action?.payload, loading: false };\r\n      case ActionTypes.LOGOUT_SUCCESS:\r\n        return {...state, loading: false};\r\n      case ActionTypes.REGISTRATION_REQUEST:\r\n        return { ...state, loading: true };\r\n      case ActionTypes.REGISTRATION_SUCCESS:\r\n        return { ...state, user: action.payload, loading: false };\r\n      case ActionTypes.REGISTRATION_FAILURE:\r\n        return { ...state, error: action.payload, loading: false };\r\n      case ActionTypes.EMAIL_VERIFICATION_SUCCESS:\r\n        return { ...state, success: action.payload, loading: false };\r\n      case ActionTypes.EMAIL_VERIFICATION_FAILURE:\r\n        return { ...state, error: action.error, loading: false };\r\n      case ActionTypes.RESEND_CODE_SUCCESS:\r\n        return { ...state, success: action.payload, loading: false };\r\n      case ActionTypes.RESEND_CODE_FAILURE:\r\n        return { ...state, error: action.error, loading: false };\r\n      case ActionTypes.FORGET_PASSWORD_REQUEST:\r\n        return { ...state, loading: true };\r\n      case ActionTypes.FORGET_PASSWORD_SUCCESS:\r\n        return { ...state, success: action.payload, loading: false };\r\n      case ActionTypes.FORGET_PASSWORD_FAILURE:\r\n        return { ...state, error: action?.payload, loading: false };\r\n      case ActionTypes.GET_USER_SUCCESS:\r\n        return { ...state, sessionData: action.payload, loading: false };\r\n      default:\r\n        return state;\r\n    }\r\n  };","C:\\react\\webFin-frontend\\frontend\\src\\pages\\oauth2\\redirect\\index.js",["286","287"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap';\r\nimport history from '../../../utils/history'\r\nimport { ROUTES } from '../../../constants/appRoutes';\r\nimport { NOTIFICATION_TYPES } from '../../../constants/app';\r\nimport { notification } from '../../../services/notification';\r\nimport { createAssessment } from '../../../middleware/assessments';\r\nimport { setItem } from '../../../utils/cache';\r\nimport { queryStringToObject } from '../../../utils/helpers'\r\n\r\nconst RedirectAuth = (props) => {\r\n    const dispatch  = useDispatch();\r\n\r\n    useEffect(()=> {\r\n        let queryData = queryStringToObject(props.history.location.search)\r\n        if (queryData?.token?.length) {\r\n            const test = queryData.test === 'true'\r\n            setItem('user', {accessToken: queryData.token,enabled: true, test: test});\r\n            if(test){\r\n                history.push(ROUTES.DASHBOARD)\r\n                notification(NOTIFICATION_TYPES.SUCCESS, 'Login Successfully');\r\n            }else if(sessionStorage.getItem('assessmentForm') && checkValidAssessmentData()){\r\n                dispatch(createAssessment(JSON.parse(sessionStorage.assessmentForm)))\r\n            }else{\r\n                history.push(ROUTES.ASSESSMENT)\r\n                notification(NOTIFICATION_TYPES.SUCCESS, 'Please fill assessment');\r\n            }\r\n\r\n\r\n        } else if (queryData?.error){\r\n            let errorMessage = 'Login error: ' + queryData.error;\r\n            history.push(ROUTES.LOGIN)\r\n            notification(NOTIFICATION_TYPES.ERROR, 'Something went wrong please try again');\r\n        }\r\n    },[props.history.location.search]);\r\n\r\n    const checkValidAssessmentData = () =>{\r\n        const assessmentForm = JSON.parse(sessionStorage.getItem('assessmentForm'))\r\n        return assessmentForm.nicheId && assessmentForm.colourId && assessmentForm.websiteName\r\n    }\r\n\r\n    return(\r\n        <section className=\"login-section main-section\">\r\n            <Container>\r\n                Hi this is redirect page.\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default withRouter(RedirectAuth);\r\n","C:\\react\\webFin-frontend\\frontend\\src\\components\\assessment\\shared\\FontStyleModal.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\components\\homepage\\index.js",["288","289","290","291"],"import React from 'react'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from \"react-router-dom\";\r\nimport { ROUTES } from '../../constants/appRoutes';\r\nimport slider1 from '../../public/images/home/slider-1.png';\r\nimport websiteBuilding from '../../public/images/home/website-building.png';\r\nimport websiteComparison from '../../public/images/home/website-comparison.png';\r\nimport basicPlan from '../../public/images/home/basic-plan.png';\r\nimport premiumPlan from '../../public/images/home/premium-plan.png';\r\nimport vipPlan from '../../public/images/home/vip-plan.png';\r\n\r\nconst HomePage = (props) => {\r\n  return(\r\n  \r\n    <section className=\"main-section\">\r\n      <section className=\"home-banner\">\r\n        <Container>\r\n          <Row className=\"align-items-center\">\r\n            <Col className=\"text-side col-7\">\r\n              <div className=\"text-wrap\">\r\n              <h1>\r\n                Your website fast and easy, now (yes, seriously!).\r\n              </h1>\r\n              <p>\r\n                Build a website, as easy as answering a couple of questions.\r\n              </p>\r\n\r\n              <Link to={ROUTES.ASSESSMENT}>\r\n                <a className=\"btn btn-primary\" >Get started</a>\r\n              </Link>\r\n\r\n              </div>\r\n            </Col>\r\n            <Col className=\"img-side col-5\">\r\n              <Carousel controls={false}>\r\n                <Carousel.Item>\r\n                 <img src={slider1} alt='slider1' />\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                  <img src={slider1} alt='slider2'/>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                  <img src={slider1} alt='slider3'/>\r\n                </Carousel.Item>\r\n              </Carousel>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n      <section className=\"get-website\">\r\n        <div className=\"get-website-inner\">\r\n        <Container>\r\n          <Row className=\"align-items-center\">\r\n            <Col className=\"heading-side col-7\">\r\n              <div className=\"heading-side-inner\">\r\n              <h3>\r\n              Get the website you want From scratch and without previous experience\r\n              </h3>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"content-side col-5\">\r\n              <div className=\"content-side-inner\">\r\n                <p>\r\n                You don’t need previous experience in design. <br/>Just let us know what kind of site you want and we’ll do the work fo you.\r\n                </p>\r\n                <Link href={ROUTES.ASSESSMENT}>\r\n                  <a className=\"btn-normal\" >Get started</a>\r\n                </Link>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        </div>\r\n      </section>\r\n      <section className=\"website-building\">\r\n        <Container>\r\n          <Row className=\"align-items-center\">\r\n            <Col className=\"content-side col-6\">\r\n            <div className=\"content-side-inner\">\r\n             <h4>Pain free website building</h4>\r\n             <p>\r\n             Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\r\n             </p>\r\n              <Link to={ROUTES.ASSESSMENT}>\r\n                  <a className=\"btn-normal\" >Get started</a>\r\n              </Link>\r\n             </div>\r\n            </Col>\r\n            <Col className=\"col-6 website-build-img\">\r\n              <img src={websiteBuilding} alt=\"\" />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n      <section className=\"website-comparison\">\r\n        <Container>\r\n          <Row className=\"align-items-center\">\r\n          <Col className=\"col-6 website-compare-img\">\r\n              <img src={websiteComparison} alt=\"\" />\r\n            </Col>\r\n            <Col className=\"content-side col-6\">\r\n            <div className=\"content-side-inner\">\r\n             <h4>Us in comparison</h4>\r\n             <p>\r\n             Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut.\r\n             </p>\r\n             <ul>\r\n               <li>Lorem ipsum dolor sit amet.</li>\r\n               <li>Lorem ipsum dolor sit amet.</li>\r\n               <li>Lorem ipsum dolor sit amet.</li>\r\n               <li>Lorem ipsum dolor sit amet.</li>\r\n             </ul>\r\n                <Link to={ROUTES.ASSESSMENT}>\r\n                  <a className=\"btn btn-primary\" >Get started</a>\r\n                </Link>\r\n             </div>\r\n            </Col>\r\n\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n      <section className=\"website-plan\">\r\n        <Container>\r\n          <h3>Select a plan</h3>\r\n          <p>30 day money back warranty on your upgraded plan</p>\r\n          <Row className=\"\">\r\n            <Col className=\"col-4\">\r\n              <div className=\"plan-detail\">\r\n                <div className=\"plan-detail-inner\">\r\n                  <div className=\"plan-img\">\r\n                    <img src={basicPlan} alt=\"Basic Plan\" />\r\n                  </div>\r\n                  <h4 className=\"plan-name\">Basic Plan</h4>\r\n                  <ul className=\"plan-feature\">\r\n                    <li>Features</li>\r\n                    <li>Features</li>\r\n                    <li>Features</li>\r\n                    <li>Features</li>\r\n                  </ul>\r\n                  <div className=\"plan-price\">Free</div>\r\n                  <div className=\"plan-action\">\r\n                    <button className=\"btn btn-secondary\">Select</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"col-4\">\r\n              <div className=\"plan-detail\">\r\n                <div className=\"plan-detail-inner\">\r\n                  <div className=\"plan-img\">\r\n                    <img src={premiumPlan} alt=\"Premium Plan\" />\r\n                  </div>\r\n                  <h4 className=\"plan-name\">Premium Plan</h4>\r\n                  <ul className=\"plan-feature\">\r\n                    <li>New Features</li>\r\n                    <li>New Features</li>\r\n                    <li>New Features</li>\r\n                    <li>New Features</li>\r\n                  </ul>\r\n                  <div className=\"plan-price\">$10<sub>/mo</sub></div>\r\n                  <div className=\"plan-action\">\r\n                    <button  className=\"btn btn-secondary\">Select</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"col-4\">\r\n              <div className=\"plan-detail\">\r\n                <div className=\"plan-detail-inner\">\r\n                  <div className=\"plan-img\">\r\n                    <img src={vipPlan} alt=\"VIP Plan\" />\r\n                  </div>\r\n                  <h4 className=\"plan-name\">VIP Plan</h4>\r\n                  <ul className=\"plan-feature\">\r\n                    <li>Get New Features</li>\r\n                    <li>Get New Features</li>\r\n                    <li>Get New Features</li>\r\n                    <li>Get New Features</li>\r\n                  </ul>\r\n                  <div className=\"plan-price\">$25<sub>/mo</sub></div>\r\n                  <div className=\"plan-action\">\r\n                    <button className=\"btn btn-secondary\">Select</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          </Container>\r\n      </section>\r\n      <section className=\"website-faq\">\r\n        <Container>\r\n          <Accordion defaultActiveKey=\"0\" className=\"accordion-faq\">\r\n            <Card className=\"accordion-card\">\r\n              <Card.Header className=\"accordion-card-header\">\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" className=\"accordion-card-btn\">\r\n                Our FAQ\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body className=\"accordion-card-body\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor</Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n            <Card className=\"accordion-card\">\r\n              <Card.Header className=\"accordion-card-header\">\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"6\" className=\"accordion-card-btn\">\r\n                How do I lorem ipsum dolor sit amet?\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"6\">\r\n                <Card.Body className=\"accordion-card-body\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor</Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n            <Card className=\"accordion-card\">\r\n              <Card.Header className=\"accordion-card-header\">\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\" className=\"accordion-card-btn\">\r\n                How do I lorem ipsum dolor sit amet?\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"1\">\r\n                <Card.Body className=\"accordion-card-body\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor</Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n            <Card className=\"accordion-card\">\r\n              <Card.Header className=\"accordion-card-header\">\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\" className=\"accordion-card-btn\">\r\n                How do I lorem ipsum dolor sit amet?\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"2\">\r\n                <Card.Body className=\"accordion-card-body\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor</Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n            <Card className=\"accordion-card\">\r\n              <Card.Header className=\"accordion-card-header\">\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\" className=\"accordion-card-btn\">\r\n                How do I lorem ipsum dolor sit amet?\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"3\">\r\n                <Card.Body className=\"accordion-card-body\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor</Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n            <Card className=\"accordion-card\">\r\n              <Card.Header className=\"accordion-card-header\">\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"4\" className=\"accordion-card-btn\">\r\n                How do I lorem ipsum dolor sit amet?\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"4\">\r\n                <Card.Body className=\"accordion-card-body\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor</Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n            <Card className=\"accordion-card\">\r\n              <Card.Header className=\"accordion-card-header\">\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"5\" className=\"accordion-card-btn\">\r\n                How do I lorem ipsum dolor sit amet?\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"5\">\r\n                <Card.Body className=\"accordion-card-body\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor</Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n\r\n          </Accordion>\r\n        </Container>\r\n      </section>\r\n    </section>)\r\n}\r\n\r\n\r\n\r\nexport default HomePage\r\n","C:\\react\\webFin-frontend\\frontend\\src\\components\\shared\\Layout.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\constants\\app.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\components\\assessment\\shared\\TemplateLayoutOne.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\components\\assessment\\StepTwo.js",["292","293","294","295"],"import React,{ useEffect ,useState} from 'react'\r\nimport { Field } from 'redux-form';\r\nimport { useSelector } from 'react-redux'\r\nimport { renderStyleMultipleRadio } from '../../utils/formUtils'\r\nimport { assessmentSaved } from '../../utils/helpers'\r\nimport { assessmentFormValidate as validate } from '../../utils/validates'\r\nimport WebTemplates ,{Header, Footer,Home, Banner,Blogs, Card} from 'web-templates';\r\nimport { reduxForm } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\nimport \r\n  {\r\n    Form,\r\n    Button,\r\n    Container,\r\n    Col,\r\n    Row,\r\n  }\r\nfrom 'react-bootstrap';\r\nimport enterIcon from '../../public/images/enter-icon.png';\r\nimport preview from '../../public/images/preview.png';\r\nconst StepTwo = (props) => {\r\n    const [isSave, setSave ] = useState(false)\r\n    const { handleSubmit,prevPage ,colorPalette, saveData} = props;\r\n    const assessmentForm = useSelector((state) => state.form.assessmentForm)\r\n    const colorObject = colorPalette.filter((item) => item.value === assessmentForm.values.colourId)[0] || {}\r\n\r\n    const data = {\r\n        colors: colorObject?.colors || [],\r\n        logoUrl: '',\r\n        logoText: assessmentForm.values.websiteName,\r\n        headerLinks: [{name: 'Home', url: '#'},{name: 'Blog', url: '#'},{name: 'About', url: '#'},{name: 'Contact', url: '#'}],\r\n        readOnly: true\r\n      }\r\n\r\n    useEffect(()=>{\r\n        setSave(assessmentSaved('step2',assessmentForm?.values))\r\n    },[assessmentForm?.values])\r\n\r\n    const handleSave = () => {\r\n        setSave(true)\r\n        saveData()\r\n    }\r\n    return(\r\n        <div className=\"assesment-step assesment-step-2\">\r\n            <Row  className=\"step-form\">\r\n                <Col className=\"col-12\">\r\n                    <Container>\r\n                        <Form className=\"form\" onSubmit={handleSubmit}>  \r\n                        <div className=\"form-heading\">   \r\n                                <h2>\r\n                                Choose Your Color Palette!\r\n                                </h2>\r\n                            </div>\r\n                            <Row className=\"color-palatte\">\r\n                                <Col className=\"col-6 color-palatte-selector\">\r\n                                    <Field\r\n                                        name=\"colourId\"\r\n                                        options={ colorPalette }\r\n                                        component={ renderStyleMultipleRadio }\r\n                                        defaultValue={ 'no' }\r\n                                        placeholder={ 'gaveCraving' }\r\n                                        isColors={true}\r\n                                        className='styled-radio-btn btn-outline'\r\n                                        imgWidth=\"30px\"\r\n                                    />\r\n                                </Col>\r\n                                <Col className=\"col-6 color-palatte-preview wizard-preview\">\r\n                                    <h4>Preview</h4>\r\n                                    <div className=\"color-preview wizrd-blog-preview color-palate-preview\">\r\n                                    <WebTemplates data={data}>\r\n                                        <Header></Header>\r\n                                        <Home>\r\n                                        <Banner>\r\n                                            <h1>\r\n                                                <span>Simple Recipes for Healthier Families</span>\r\n\r\n                                            </h1>\r\n                                            <h5>Welcome to the most reliable source for healthy recipes!</h5>\r\n                                            <div className=\"wizrd-form-wrapper\">\r\n                                            <form className=\"wizrd-newsletter\">\r\n                                                <div className=\"form-group\">\r\n                                                <input className=\"form-control\" placeholder=\"Enter your email\" type=\"text\" />\r\n                                                </div>\r\n                                                <button type=\"submit\" className=\"btn btn-primary\">Subscribe!</button>\r\n                                            </form>\r\n                                            </div>\r\n                                        </Banner>\r\n                                        <Blogs>\r\n                                            <h2 className=\"wizrd-section-heading\">\r\n                                                Recent Blog Posts\r\n                                                <a href=\"\">View All</a>\r\n                                                </h2>\r\n                                                <ul className=\"wizrd-blog-list\">\r\n                                                    <li>\r\n                                                        <Card \r\n                                                        image={'https://homepages.cae.wisc.edu/~ece533/images/boat.png'}\r\n                                                        >\r\n                                                        <h3>The Joy of Cooking</h3>\r\n                                                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Imperdiet praesent eu accumsan, curabitur. Nulla viverra aliquam viverra id a.</p>\r\n                                                        </Card>       \r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <Card \r\n                                                        image={'https://homepages.cae.wisc.edu/~ece533/images/boat.png'}\r\n                                                        >\r\n                                                        <h3>The Joy of Cooking</h3>\r\n                                                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Imperdiet praesent eu accumsan, curabitur. Nulla viverra aliquam viverra id a.</p>\r\n                                                        </Card>       \r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <Card \r\n                                                        image={'https://homepages.cae.wisc.edu/~ece533/images/boat.png'}\r\n                                                        >\r\n                                                        <h3>The Joy of Cooking</h3>\r\n                                                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Imperdiet praesent eu accumsan, curabitur. Nulla viverra aliquam viverra id a.</p>\r\n                                                        </Card>       \r\n                                                    </li>\r\n                                                </ul>\r\n                                        </Blogs>\r\n                                        </Home>\r\n                                    </WebTemplates>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                                <div className=\"step-btns\">\r\n                                <div className=\"step-btn-left\">\r\n                                <Button onClick={prevPage} type=\"button\" variant=\"secondary\" >\r\n                                        Back  \r\n                                        </Button>\r\n                                </div> \r\n                                <div className=\"step-btn-right\">\r\n                                    <div className=\"step-btn\">\r\n                                        <Button type=\"button\"  disabled={!props.valid} onClick={handleSave} variant=\"light\" >\r\n                                        { isSave ? 'Saved' : 'Save'}   \r\n                                        </Button>\r\n                                    </div>\r\n                                    <div className=\"step-btn\">\r\n                                    <span>\r\n                                    { props.valid  ? \r\n                                         <Button type=\"submit\" variant=\"primary\">\r\n                                         Next\r\n                                         </Button>\r\n                                        : \r\n                                        <Button type=\"button\" disabled={true} variant=\"primary\">\r\n                                        Next\r\n                                        </Button>}\r\n                                        </span>\r\n                                        <span className=\"enter-btn\">\r\n                                            <a>\r\n                                            or Press Enter\r\n                                            <img src={enterIcon} alt=\"Enter\" />\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n        \r\n    )\r\n}\r\nStepTwo.propTypes = {\r\n    handleSubmit: PropTypes.func,\r\n    submitData: PropTypes.func,\r\n    saveData: PropTypes.func\r\n};\r\nexport default reduxForm({\r\n    form: 'assessmentForm',\r\n    destroyOnUnmount: false,\r\n    validate\r\n  })(StepTwo);",["296","297"],"C:\\react\\webFin-frontend\\frontend\\src\\middleware\\auth.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\utils\\validates.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\services\\api.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\reportWebVitals.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\components\\forget-password\\OtpForm.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\components\\TermsCondition.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\actions\\user\\actionTypes.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\utils\\svg.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\components\\shared\\Navbar.js",["298","299","300","301","302","303","304"],"import React, { useState } from 'react'\r\nimport {Link }  from 'react-router-dom'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Dropdown\r\n}\r\nfrom 'react-bootstrap';\r\nimport webFinLogo from '../../images/header/webFin-logo.svg';\r\nimport headerProfilePic from '../../images/media/media-1.jpg';\r\nimport { isLoggedIn } from '../../utils/helpers'\r\nimport { logoutUser } from '../../middleware/auth';\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  NotificationIcon,\r\n  ChevronRight,\r\n} from '../../utils/svg';\r\n\r\nconst Navbar = (props) => {\r\n  const dispatch  = useDispatch();\r\n  const [ mobileHumberger, setMobileHumberger] = useState(false)\r\n  const [ activeProfileNav ,setActiveProfileNav ] = useState(false)\r\n  const [navBarActiveClass , setNavBarActiveClass] = useState('')\r\n  const btAction = (pathname) => {\r\n    if(pathname === '/register'){\r\n      return 'logo-right no-login';\r\n    } else if(pathname === '/confirm-account'){\r\n      return 'logo-right no-login';\r\n    } else if(pathname === '/login'){\r\n      return 'no-login';\r\n    } else {\r\n      return '';\r\n    }\r\n    \r\n  }\r\n    const logout = () => {\r\n      dispatch(logoutUser()) \r\n    }\r\n    const { pathname } = props\r\n    const LinkView = () => {\r\n      if(isLoggedIn()){\r\n        return(\r\n          <ul className=\"main-navigation\">\r\n            <li>\r\n              <a  href=\"#\">All Sites</a>\r\n            </li>\r\n            <li>\r\n              <a  href=\"#\">Domains</a>\r\n            </li>\r\n            <li>\r\n              <a  href=\"#\">Support</a>\r\n            </li>\r\n            <li>\r\n              <a  href=\"#\"><NotificationIcon /></a>\r\n            </li>\r\n            <li className=\"header-profile-img\">\r\n         \r\n              <Dropdown >\r\n                <Dropdown.Toggle>\r\n                <span className=\"nav-profile-pic\">\r\n                      <img src={headerProfilePic} alt=\"John\" />\r\n                    </span>\r\n                    <ChevronRight />\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu  menuAlign=\"right\">\r\n                  <Dropdown.Item onClick={logout} >logout</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </li>\r\n            {/* <li className={`header-profile-img ${activeProfileNav ? 'active' : ''}`}>\r\n              <a href=\"javascript:void(0)\" onClick={() => setActiveProfileNav(!activeProfileNav)}>\r\n                <span className=\"nav-profile-pic\">\r\n                  <img src={headerProfilePic} alt=\"John\" />\r\n                </span>\r\n                <ChevronRight />\r\n              </a>\r\n              <ul className=\"header-submenu\">\r\n                <li>\r\n                <a href='javascript:void(0)' onClick={logout} >logout</a>\r\n                </li>\r\n              </ul>\r\n            </li> */}\r\n          </ul>\r\n        )\r\n      } else if(pathname !== '/forget-password' &&  pathname !== '/confirm-account'){\r\n        return(\r\n          <Link to=\"/login\" className='btn btn-secondary'>\r\n            login\r\n          </Link>\r\n        )\r\n      }\r\n    }\r\n    return (\r\n      <header className={`main-header ${btAction(pathname)}`}>\r\n        <Container>     \r\n          <Row className=\"header-top\">\r\n            <Col className=\"header-logo\">\r\n              <div className=\"navbar-brand\">\r\n                <Link to={\"/\"} className=\"navbar-item\" title=\"Logo\">\r\n                  <img src={webFinLogo} alt=\"WebFin\" />                               \r\n                </Link>           \r\n              </div>                                     \r\n            </Col>\r\n            <Col className=\"header-menu\">\r\n              <div class={`mobile-humberger ${mobileHumberger ? 'change' : ''}`} onClick={() => setMobileHumberger(!mobileHumberger)}>\r\n                <div class=\"bar1\"></div>\r\n                <div class=\"bar2\"></div>\r\n                <div class=\"bar3\"></div>\r\n              </div>\r\n              <nav\r\n                className=\"navbar is-transparent\"\r\n                role=\"navigation\"\r\n                aria-label=\"main-navigation\"\r\n              >\r\n                <div\r\n                  id=\"navMenu\"\r\n                  className={`navbar-menu ${navBarActiveClass}`}\r\n                >\r\n                  <div className=\"\">\r\n                    {LinkView()}\r\n                  </div>\r\n                </div>\r\n              </nav>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </header>\r\n    )\r\n  }\r\n\r\n\r\nexport default (Navbar)\r\n","C:\\react\\webFin-frontend\\frontend\\src\\pages\\assessment\\index.js",["305"],"import React, { useState, useEffect } from 'react'\r\nimport {reset} from 'redux-form';\r\n// import Router from 'next/router'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch , useSelector } from 'react-redux'\r\n// import withPublicRoute from '../../components/hoc/withPublicRoute'\r\nimport StepOne from  '../../components/assessment/StepOne';\r\nimport StepTwo from  '../../components/assessment/StepTwo';\r\nimport StepThree from  '../../components/assessment/StepThree';\r\nimport Preview from  '../../components/assessment/Preview';\r\nimport { ROUTES } from '../../constants/appRoutes'\r\nimport { getAssessment ,createAssessment } from '../../middleware/assessments';\r\nimport { isLoggedIn } from '../../utils/helpers'\r\n\r\nconst AssessmentPage = (props) => {\r\n  const history = useHistory();\r\n  const dispatch  = useDispatch()\r\n  const [ step, setStep ] = useState(1)\r\n  const { assessmentData } = useSelector((state) => state.assessment)\r\n  const assessmentForm = useSelector((state) => state.form.assessmentForm)\r\n  const {\r\n    niches ,\r\n    colorPalette,\r\n  } = assessmentData\r\n\r\n  useEffect(() =>{\r\n    dispatch(getAssessment())\r\n    return () => {\r\n      dispatch(reset('assessmentForm'))\r\n    }\r\n  },[])\r\n  const nextPage = (data) => {\r\n    setStep(step+1)\r\n    saveData()\r\n  }\r\n\r\n  const prevPage = () =>  {\r\n      setStep(step-1)\r\n  }\r\n\r\n  const saveData = () =>{\r\n    const values = assessmentForm.values\r\n    if(values){\r\n      sessionStorage.setItem('assessmentForm', JSON.stringify(values))\r\n    }\r\n  }\r\n\r\n  const finalSubmit = (data) =>{\r\n    if(isLoggedIn()){\r\n      dispatch(createAssessment(data))\r\n    }else{\r\n      sessionStorage.setItem('assessmentForm', JSON.stringify(data))\r\n      history.push(ROUTES.REGISTER)\r\n    }\r\n  }\r\n\r\n  const handleView = () => {\r\n    switch(step){\r\n    case 1:\r\n        return <StepOne kindOfBuild={niches} saveData={saveData} onSubmit={nextPage} />\r\n    case 2:\r\n        return <StepTwo  colorPalette={colorPalette} saveData={saveData} prevPage={prevPage} onSubmit={nextPage} />\r\n    case 3:\r\n        return <StepThree setStep={setStep}  colorPalette={colorPalette} assessmentData={assessmentData} saveData={saveData} prevPage={prevPage} onSubmit={nextPage} />\r\n    case 4:\r\n        return <Preview  colorPalette={colorPalette} assessmentData={assessmentData} saveData={saveData} prevPage={prevPage} onSubmit={finalSubmit} />\r\n    default:\r\n        return null\r\n    }\r\n}\r\n  return(\r\n      <section className=\"main-section\">\r\n        {handleView()}\r\n      </section>\r\n)\r\n}\r\nAssessmentPage.propTypes = {\r\n};\r\n\r\nexport default AssessmentPage\r\n\r\n","C:\\react\\webFin-frontend\\frontend\\src\\components\\forget-password\\ResetPasswordForm.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\components\\assessment\\shared\\UploadImageModal.js",["306","307"],"import React,{ useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Field } from 'redux-form';\r\nimport { renderFileDrop } from '../../../utils/formUtils'\r\nimport { dataUrlToBase64, bytesToSize } from '../../../utils/helpers'\r\nimport \r\n  {\r\n    Button,\r\n    Col,\r\n\tRow,\r\n\tModal,\r\n    Form\r\n  }\r\nfrom 'react-bootstrap';\r\nconst UploadImageModal = (props) => {\r\n    const { openModal, handleToggleModal, fieldName,unsplashImages ,getBase64,clearImage, handleSearch, previewFile} = props\r\n    const [selectedUnsplash, setSelectedUnsplash ] = useState(null);\r\n    const handleSelect = async(id) => {\r\n        setSelectedUnsplash(id)\r\n        const image = unsplashImages.filter((item) => item.id == id)[0];\r\n        image && dataUrlToBase64(image.urls.regular,function(result){\r\n            getBase64(result)\r\n        });\r\n    }\r\n    return(\r\n        <Modal show={openModal} onHide={handleToggleModal} className=\"logo-upload-modal\">\r\n        <Modal.Header closeButton>\r\n            <div className=\"logo-upload-header\">\r\n                <Row>\r\n                    <Col className=\"col-6\">\r\n                        <Modal.Title>Images</Modal.Title>\r\n                    </Col>\r\n                    <Col className=\"col-6 search-wrapper\">\r\n                        <Form.Group>\r\n                            <input onChange={handleSearch} name='search' className='form-control' />\r\n                        </Form.Group>\r\n                       \r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </Modal.Header>\r\n        <Modal.Body>\t\r\n        \r\n        <div className=\"\">\r\n            <Row>\r\n                <Col className=\"col-4\">\r\n                    <Field\r\n                        name={ fieldName }\r\n                        component={ renderFileDrop }\r\n                        placeholder={\"<a><i className='fa fa-plus'/> upload your logo</a>\"}\r\n                        isDropText={'Drag your images'}\r\n                    />\r\n                     {previewFile && <div className=\"preview-logo\">\r\n                         \r\n                        {typeof(previewFile) !== 'string' ? \r\n                        <span>\r\n                          {previewFile.name}-{bytesToSize(previewFile.size)}\r\n                        </span> :\r\n                        <img src={previewFile} />\r\n                        }\r\n                        <span onClick={clearImage} className=\"clear-logo\">clear</span>\r\n                    </div>}\r\n                </Col>\r\n                <Col className=\"col-8\">\r\n                    <div className=\"logo-gallery\">\r\n                        <ul>\r\n                            {unsplashImages.slice(0,10).map((item)=>{\r\n                                return( <li onClick={() => handleSelect(item.id)} key={item.id} className={`${selectedUnsplash === item.id ? 'active' : '' }`}>\r\n                                    <img src={item.urls.small} alt=\"media1\" />\r\n                                </li>)\r\n                            })}\r\n                        </ul>\r\n                        <ul>\r\n                            {unsplashImages.slice(10,20).map((item)=>{\r\n                                return( <li onClick={() => handleSelect(item.id)} key={item.id} className={`${selectedUnsplash === item.id ? 'active' : '' }`}>\r\n                                    <img src={item.urls.small} alt=\"media1\" />\r\n                                </li>)\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    {/* <div className=\"logo-upload-progress\">\r\n                    <ProgressBar now={60} />\r\n                    </div> */}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <div className=\"modal-btns\">\r\n                <Button variant=\"secondary\">Unsplash</Button>\r\n                <Button variant=\"primary\" onClick={handleToggleModal}>Confirm</Button>\r\n            </div>\r\n        </Modal.Footer>\r\n    </Modal>\r\n\r\n    )\r\n}\r\n\r\nUploadImageModal.propTypes = {\r\n    handleToggleModal: PropTypes.func,\r\n    openModal: PropTypes.bool,\r\n    handleSearch: PropTypes.func,\r\n    getBase64: PropTypes.func,\r\n    clearImage: PropTypes.func,\r\n    previewImage: PropTypes.object,\r\n    fieldName: PropTypes.string\r\n\r\n};\r\n\r\n\r\n\r\nexport default UploadImageModal","C:\\react\\webFin-frontend\\frontend\\src\\App.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\pages\\register\\index.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\components\\shared\\Footer.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\middleware\\blog.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\middleware\\assessments\\index.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\actions\\blog\\actionTypes.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\utils\\history.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\pages\\blog\\rte.js",["308","309","310"],"import React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport isHotkey from 'is-hotkey'\r\nimport { Editable, withReact, useSlate, Slate } from 'slate-react'\r\nimport {\r\n  Editor,\r\n  Transforms,\r\n  createEditor,\r\n  Element as SlateElement,\r\n} from 'slate'\r\nimport { withHistory } from 'slate-history'\r\n\r\nimport { Button, Icon, Toolbar } from './components'\r\n\r\nimport {\r\n  FontSizeEditor,\r\n  FontFamilyEditor,\r\n  BoldEditor,\r\n  ItalicEditor,\r\n  UnderlineEditor,\r\n  StrikeThroghEditor,\r\n  HighlightEditor,\r\n  ListNumberedEditor,\r\n  ListBulletedEditor,\r\n  LinkEditor,\r\n  QuoteEditor,\r\n  ImageUploadEditor,\r\n  TableEditor,\r\n  MediaEditor,\r\n  UndoEditor,\r\n  RedoEditor,\r\n} from '../../utils/svg';\r\n\r\nimport {\r\n  Form,\r\n} from 'react-bootstrap';\r\n\r\nconst HOTKEYS = {\r\n  'mod+b': 'bold',\r\n  'mod+i': 'italic',\r\n  'mod+u': 'underline',\r\n  'mod+`': 'code',\r\n}\r\n\r\nconst LIST_TYPES = ['numbered-list', 'bulleted-list']\r\n\r\nconst RichTextEditor = (props) => {\r\n  const [value, setValue] = useState(props.initialValue)\r\n  const renderElement = useCallback(props => <Element {...props} />, [])\r\n  const renderLeaf = useCallback(props => <Leaf {...props} />, [])\r\n  const editor = useMemo(() => withHistory(withReact(createEditor())), [])\r\n\r\n  useEffect(() => {\r\n    props.setRTEData(value);\r\n  }, [value])\r\n\r\n  return (\r\n    <Slate editor={editor} value={value} onChange={value => setValue(value)} className=\"custom-rte-editor\">\r\n      <Toolbar className=\"custom-rte-toolbar\">\r\n        <div className=\"toolbar-wrapper\">\r\n          {/* <div className=\"toolbar-box\">\r\n            <Form.Control as=\"select\" custom>\r\n              <option>Paragraph</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </Form.Control>\r\n          </div> */}\r\n          {/* <div className=\"toolbar-box\">\r\n            <MarkButton format=\"font-size\" icon=\"FontSizeEditor\"/>\r\n            <MarkButton format=\"font-family\" icon=\"FontFamilyEditor\"/>\r\n          </div> */}\r\n              <div className=\"toolbar-box\">\r\n                <MarkButton format=\"bold\" icon=\"BoldEditor\"/>\r\n                <MarkButton format=\"italic\" icon=\"ItalicEditor\"/>\r\n                <MarkButton format=\"underline\" icon=\"UnderlineEditor\"/>\r\n                {/* <MarkButton format=\"strike\" icon=\"StrikeThroghEditor\"/> */}\r\n                {/* <MarkButton format=\"highlight\" icon=\"HighlightEditor\"/> */}\r\n              </div>\r\n                {/* <div className=\"toolbar-box\">\r\n                  <MarkButton format=\"list-numbered\" icon=\"ListNumberedEditor\"/>\r\n                  <MarkButton format=\"list-bullet\" icon=\"ListBulletedEditor\"/>\r\n                </div>\r\n                  <div className=\"toolbar-box\">\r\n                    <MarkButton format=\"list-numbered\" icon=\"LinkEditor\"/>\r\n                    <MarkButton format=\"list-bullet\" icon=\"QuoteEditor\"/>\r\n                    <MarkButton format=\"list-bullet\" icon=\"ImageUploadEditor\"/>\r\n                    <MarkButton format=\"list-bullet\" icon=\"TableEditor\"/>\r\n                    <MarkButton format=\"list-bullet\" icon=\"MediaEditor\"/>\r\n                  </div>\r\n                    <div className=\"toolbar-box\">\r\n                      <MarkButton format=\"list-numbered\" icon=\"UndoEditor\"/>\r\n                      <MarkButton format=\"list-bullet\" icon=\"RedoEditor\"/>\r\n                    </div> */}\r\n         {/*\r\n\r\n          <div className=\"toolbar-box\">\r\n\r\n          </div> */}\r\n        </div>\r\n\r\n        {/* <MarkButton format=\"italic\" icon=\"format_italic\" />\r\n        <MarkButton format=\"underline\" icon=\"format_underlined\" />\r\n        <MarkButton format=\"code\" icon=\"code\" />\r\n        <BlockButton format=\"heading-one\" icon=\"looks_one\" />\r\n        <BlockButton format=\"heading-two\" icon=\"looks_two\" />\r\n        <BlockButton format=\"block-quote\" icon=\"format_quote\" />\r\n        <BlockButton format=\"numbered-list\" icon=\"format_list_numbered\" />\r\n        <BlockButton format=\"bulleted-list\" icon=\"format_list_bulleted\" /> */}\r\n      </Toolbar>\r\n      <div className=\"rte-editor-content\">\r\n        <div className=\"editor-content\">\r\n          <Editable\r\n            renderElement={renderElement}\r\n            renderLeaf={renderLeaf}\r\n            placeholder=\"Enter some rich text…\"\r\n            readOnly={props.readOnly}\r\n            spellCheck\r\n            autoFocus\r\n            onKeyDown={event => {\r\n              for (const hotkey in HOTKEYS) {\r\n                if (isHotkey(hotkey, event)) {\r\n                  event.preventDefault()\r\n                  const mark = HOTKEYS[hotkey]\r\n                  toggleMark(editor, mark)\r\n                }\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n    </Slate>\r\n  )\r\n}\r\n\r\nconst getIcon = (iconType) => {\r\n  switch (iconType) {\r\n    case 'FontSizeEditor':\r\n      return <FontSizeEditor />\r\n    case 'FontFamilyEditor':\r\n      return <FontFamilyEditor />\r\n    case 'BoldEditor':\r\n      return <BoldEditor />\r\n    case 'ItalicEditor':\r\n      return <ItalicEditor />\r\n    case 'UnderlineEditor':\r\n      return <UnderlineEditor />\r\n    case 'StrikeThroghEditor':\r\n      return <StrikeThroghEditor />\r\n    case 'HighlightEditor':\r\n      return <HighlightEditor />\r\n    case 'ListNumberedEditor':\r\n      return <ListNumberedEditor />\r\n    case 'ListBulletedEditor':\r\n      return <ListBulletedEditor />\r\n    case 'LinkEditor':\r\n      return <LinkEditor />\r\n    case 'QuoteEditor':\r\n      return <QuoteEditor />\r\n    case 'ImageUploadEditor':\r\n      return <ImageUploadEditor />\r\n    case 'TableEditor':\r\n      return <TableEditor />\r\n    case 'MediaEditor':\r\n      return <MediaEditor />\r\n    case 'UndoEditor':\r\n      return <UndoEditor />\r\n    case 'RedoEditor':\r\n      return <RedoEditor />\r\n    default:\r\n      return <BoldEditor />\r\n  }\r\n}\r\n\r\nconst toggleBlock = (editor, format) => {\r\n  const isActive = isBlockActive(editor, format)\r\n  const isList = LIST_TYPES.includes(format)\r\n\r\n  Transforms.unwrapNodes(editor, {\r\n    match: n =>\r\n      LIST_TYPES.includes(\r\n        !Editor.isEditor(n) && SlateElement.isElement(n) && n.type\r\n      ),\r\n    split: true,\r\n  })\r\n  const newProperties = {\r\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format,\r\n  }\r\n  Transforms.setNodes(editor, newProperties)\r\n\r\n  if (!isActive && isList) {\r\n    const block = { type: format, children: [] }\r\n    Transforms.wrapNodes(editor, block)\r\n  }\r\n}\r\n\r\nconst toggleMark = (editor, format) => {\r\n  const isActive = isMarkActive(editor, format)\r\n\r\n  if (isActive) {\r\n    Editor.removeMark(editor, format)\r\n  } else {\r\n    Editor.addMark(editor, format, true)\r\n  }\r\n}\r\n\r\nconst isBlockActive = (editor, format) => {\r\n  const [match] = Editor.nodes(editor, {\r\n    match: n =>\r\n      !Editor.isEditor(n) && SlateElement.isElement(n) && n.type === format,\r\n  })\r\n\r\n  return !!match\r\n}\r\n\r\nconst isMarkActive = (editor, format) => {\r\n  const marks = Editor.marks(editor)\r\n  return marks ? marks[format] === true : false\r\n}\r\n\r\nconst Element = ({ attributes, children, element }) => {\r\n  switch (element.type) {\r\n    case 'block-quote':\r\n      return <blockquote {...attributes}>{children}</blockquote>\r\n    case 'bulleted-list':\r\n      return <ul {...attributes}>{children}</ul>\r\n    case 'heading-one':\r\n      return <h1 {...attributes}>{children}</h1>\r\n    case 'heading-two':\r\n      return <h2 {...attributes}>{children}</h2>\r\n    case 'list-item':\r\n      return <li {...attributes}>{children}</li>\r\n    case 'numbered-list':\r\n      return <ol {...attributes}>{children}</ol>\r\n    default:\r\n      return <p {...attributes}>{children}</p>\r\n  }\r\n}\r\n\r\nconst Leaf = ({ attributes, children, leaf }) => {\r\n  if (leaf.bold) {\r\n    children = <strong>{children}</strong>\r\n  }\r\n\r\n  if (leaf.code) {\r\n    children = <code>{children}</code>\r\n  }\r\n\r\n  if (leaf.italic) {\r\n    children = <em>{children}</em>\r\n  }\r\n\r\n  if (leaf.underline) {\r\n    children = <u>{children}</u>\r\n  }\r\n\r\n  return <span {...attributes}>{children}</span>\r\n}\r\n\r\nconst BlockButton = ({ format, icon }) => {\r\n  const editor = useSlate()\r\n  return (\r\n    <Button\r\n      active={isBlockActive(editor, format)}\r\n      onMouseDown={event => {\r\n        event.preventDefault()\r\n        toggleBlock(editor, format)\r\n      }}\r\n    >\r\n      <Icon>{icon}</Icon>\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst MarkButton = ({ format, icon }) => {\r\n  const editor = useSlate()\r\n  const iconSvg = getIcon(icon)\r\n  return (\r\n    <Button\r\n      className=\"editor-icons\"\r\n      active={isMarkActive(editor, format)}\r\n      onMouseDown={event => {\r\n        event.preventDefault()\r\n        toggleMark(editor, format)\r\n      }}\r\n    >\r\n      <Icon>{iconSvg}</Icon>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default RichTextEditor;","C:\\react\\webFin-frontend\\frontend\\src\\components\\PrivacyPolicy.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\services\\strapiApi.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\store.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\constants\\appRoutes.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\reducers\\index.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\pages\\terms-conditions\\index.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\pages\\dashboard\\index.js",["311","312","313","314","315","316","317","318","319","320","321","322","323","324","325"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentUser } from '../../middleware/auth'\r\nimport { removeItem } from '../../utils/cache'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {\r\n  DashboardMenuIcon,\r\n  EditSiteMenuIcon,\r\n  BlogMenuIcon,\r\n  MarketingMenuIcon,\r\n  SubMenuIcon,\r\n  Facebook,\r\n  LinkedIn,\r\n  Twitter,\r\n  YouTube,\r\n  Instagram,\r\n  CloseIcon,\r\n  SmallRadio,\r\n  SmallRadioChecked,\r\n  OpenArrow,\r\n} from '../../utils/svg'\r\n const Dashboard =(props) => {\r\n    const dispatch = useDispatch();\r\n    const [status, setStatus ] = useState(false)\r\n    const data = useSelector(state => state.user.sessionData?.data?.data)\r\n    var timeoutData = null;\r\n    useEffect(() => {\r\n        removeItem('assessmentForm')\r\n        dispatch(getCurrentUser());\r\n        return () =>{\r\n          clearInterval(timeoutData)\r\n        }\r\n    }, [  ]);\r\n\r\n\r\n    useEffect(() =>{\r\n      data?.site?.domain && checkDomainStatus(`https://${data?.site?.domain}`)\r\n      timeoutData = data?.site?.domain && setInterval(function(){\r\n        checkDomainStatus(`https://${data?.site?.domain}`)\r\n      },30000)\r\n      return () =>{\r\n        clearInterval(timeoutData)\r\n      }\r\n    },[data?.site?.domain])\r\n\r\n\r\n    const checkDomainStatus = async(domain) => {\r\n      try{\r\n        const data = await axios.get(domain)\r\n        if(data.status === 200){\r\n          setStatus(true)\r\n          clearInterval(timeoutData)\r\n        }\r\n      }catch(err){\r\n      }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n      <section className=\"dashboard-wrapper\">\r\n        <aside className=\"dashboard-menu\">\r\n          <ul>\r\n            <li className=\"active\">\r\n              <Link to=\"/dashboard\">\r\n              Dashboard\r\n                <DashboardMenuIcon />\r\n              </Link>\r\n            </li>\r\n            <li >\r\n              <Link to=\"/blog\">\r\n              Blog\r\n                <BlogMenuIcon />\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"#\">\r\n              Test\r\n                <DashboardMenuIcon />\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"#\">\r\n              Test\r\n                <DashboardMenuIcon />\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"#\">\r\n              Test\r\n                <DashboardMenuIcon />\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"#\">\r\n              Test\r\n                <DashboardMenuIcon />\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </aside>\r\n        <main className=\"dashboard-data\">\r\n          <section className=\"dashboard-body\">\r\n            <div className=\"dashboard-header\">\r\n              <div className=\"dashboard-title\">\r\n                <h1>Dashboard</h1>\r\n                <h5>\r\n                  Domain:  \r\n                  <a href={`https://${data?.site?.domain}`} target='_blank'>\r\n                    { data?.site?.domain }\r\n                  </a> \r\n                  <span className={`${status ? 'success' : 'in-progress'}`}> - \r\n                    {status ? \"Done\" : \"In Progress\"}\r\n                  </span>\r\n                </h5>\r\n              </div>\r\n              <div className=\"dashboard-btns\">\r\n                <Link to={'/blog'} className='btn btn-primary'>Create Blog</Link>\r\n              </div>\r\n              \r\n            </div>\r\n          \r\n            \r\n          \r\n            \r\n          </section>\r\n        </main>\r\n      </section>\r\n        \r\n    )\r\n}\r\n\r\nexport default Dashboard","C:\\react\\webFin-frontend\\frontend\\src\\pages\\login\\index.js",["326","327","328"],"import React, {useEffect, useState} from 'react'\r\n// import  Link from 'next/link'\r\nimport { Link } from \"react-router-dom\";\r\nimport { renderFieldWG, renderField } from '../../utils/formUtils'\r\nimport { togglePassword } from '../../utils/helpers'\r\nimport { loginValidate as validate } from '../../utils/validates'\r\nimport { reduxForm } from 'redux-form';\r\nimport { Field } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\nimport { loginUser } from '../../middleware/auth'\r\n// import withPublicRoute from '../../components/hoc/withPublicRoute'\r\n\r\nimport\r\n  {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Button\r\n  }\r\nfrom 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport googleLogin from '../../public/images/google-login.svg';\r\nimport facebookLogin from '../../public/images/facebook-login.svg';\r\n// import Route  from 'next/router'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ROUTES } from '../../constants/appRoutes';\r\n\r\nconst LoginPage = (props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [ redirectAssessment, setRedirectToAssessment] = useState(false)\r\n  const assessmentForm = useSelector((state)=>state.form.assessmentForm)\r\n  const { handleSubmit } = props\r\n  const submitData = (data) => {\r\n    dispatch(loginUser(data))\r\n  }\r\n  useEffect(() => {\r\n    if(!sessionStorage.assessmentForm){\r\n      setRedirectToAssessment(true)\r\n    }\r\n  },[])\r\n\r\n  const handleAccess = () =>{\r\n    if(redirectAssessment){\r\n      history.push(ROUTES.ASSESSMENT)\r\n    }else{\r\n      history.push(ROUTES.REGISTER)\r\n    }\r\n  }\r\n  return(\r\n    <section className=\"login-section main-section\">\r\n      <Container>\r\n        <Row className=\"back-to-home\">\r\n          <Col className=\"col-12\">\r\n          <Link to=\"/\">\r\n            <span>\r\n              <svg width=\"24\" height=\"15\" viewBox=\"0 0 24 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M15.5 13.4999L9.5 7.49986L15.5 1.49986\" stroke=\"#757575\" strokeLinejoin=\"round\"/>\r\n              </svg>\r\n              Back to Home\r\n            </span>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"small-wrapper\">\r\n        <Row className=\"login-forms\">\r\n          <Col className=\"col-12\">\r\n            <h1 className=\"section-heading\">\r\n            Log in\r\n            </h1>\r\n            <p className=\"heading-detail\">\r\n            Don’t have an account?  <a href=\"javascript:void(0)\" onClick={handleAccess}>Sign Up</a>\r\n            </p>\r\n            <Form onSubmit={handleSubmit(submitData)}>\r\n              <Field\r\n                name=\"email\"\r\n                label=\"email\"\r\n                type=\"text\"\r\n                component={ renderFieldWG }\r\n                maxLength=\"150\"\r\n                placeholder='Enter your email'\r\n              />\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Password:</Form.Label>\r\n                <div className=\"password-wrap\">\r\n                  <Field\r\n                    name=\"password\"\r\n                    label=\"password\"\r\n                    type=\"password\"\r\n                    component={ renderField }\r\n                    maxLength=\"150\"\r\n                    placeholder='Enter your password'\r\n                  />\r\n\r\n\r\n                  <span onClick={togglePassword} className=\"hide-password password-swap\">\r\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path d=\"M14.12 14.12C13.8454 14.4147 13.5141 14.6511 13.1462 14.8151C12.7782 14.9791 12.3809 15.0673 11.9781 15.0744C11.5753 15.0815 11.1752 15.0074 10.8016 14.8565C10.4281 14.7056 10.0887 14.481 9.80385 14.1961C9.51897 13.9113 9.29439 13.5719 9.14351 13.1984C8.99262 12.8248 8.91853 12.4247 8.92563 12.0219C8.93274 11.6191 9.02091 11.2218 9.18488 10.8538C9.34884 10.4858 9.58525 10.1546 9.88 9.87999M17.94 17.94C16.2306 19.243 14.1491 19.9649 12 20C5 20 1 12 1 12C2.24389 9.68189 3.96914 7.6566 6.06 6.05999L17.94 17.94ZM9.9 4.23999C10.5883 4.07887 11.2931 3.99833 12 3.99999C19 3.99999 23 12 23 12C22.393 13.1356 21.6691 14.2047 20.84 15.19L9.9 4.23999Z\" stroke=\"#757575\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                      <path d=\"M1 1L23 23\" stroke=\"#757575\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                    </svg>\r\n                </span>\r\n                </div>\r\n                <Form.Text>\r\n                  <Link to={ROUTES.FORGET_PASSWORD}>\r\n                    Don't remember your password?\r\n                </Link>\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Button type=\"submit\">\r\n                Sign In\r\n              </Button>\r\n            </Form>\r\n            <div className=\"social-logins\">\r\n              <p className=\"login-or\">Or</p>\r\n              <div className=\"social-btn\">\r\n                <button href='#' className=\"btn btn-primary btn-facebook\">\r\n                <img src={facebookLogin} alt=\"facebook\" />\r\n                  <a href={`${process.env.REACT_APP_API_URL}/oauth2/authorize/facebook`}>Continue with Facebook</a>\r\n                </button>\r\n              </div>\r\n              <div className=\"social-btn\">\r\n                <button href='#' className=\"btn btn-primary btn-google\">\r\n\r\n                  <img src={googleLogin} alt=\"Google\" />\r\n                  <a href={`${process.env.REACT_APP_API_URL}/oauth2/authorize/google`}>Continue with Google</a>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        </div>\r\n      </Container>\r\n    </section>\r\n)\r\n}\r\n\r\n\r\nLoginPage.propTypes = {\r\n  handleSubmit: PropTypes.func\r\n};\r\nexport default reduxForm({\r\n  form: 'loginform',\r\n  validate\r\n})(LoginPage);\r\n","C:\\react\\webFin-frontend\\frontend\\src\\pages\\privacy-policy\\index.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\pages\\forget-password\\index.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\pages\\blog\\index.js",["329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350"],"import React, { useState, useEffect } from 'react';\r\nimport RichTextEditor from './rte';\r\nimport { Link } from 'react-router-dom'\r\nimport { Field, change } from 'redux-form';\r\nimport { renderFieldWG } from '../../utils/formUtils'\r\nimport {\r\n  DashboardMenuIcon,\r\n  EditSiteMenuIcon,\r\n  BlogMenuIcon,\r\n  MarketingMenuIcon,\r\n  SubMenuIcon,\r\n  Facebook,\r\n  LinkedIn,\r\n  Twitter,\r\n  YouTube,\r\n  Instagram,\r\n  CloseIcon,\r\n  SmallRadio,\r\n  SmallRadioChecked,\r\n  OpenArrow,\r\n} from '../../utils/svg'\r\n\r\nimport {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  ProgressBar,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\nimport { getCurrentUser } from '../../middleware/auth'\r\nimport { createBlog ,callPublish } from '../../middleware/blog';\r\nimport { getUnsplash} from '../../middleware/assessments'\r\nimport { change as reduxChange } from 'redux-form'\r\nimport { blogValidate as validate } from '../../utils/validates';\r\nimport profilePic from '../../public/images/media/media-4.jpg';\r\nimport media1 from '../../public/images/media/media-1.jpg';\r\nimport media2 from '../../public/images/media/media-2.jpg';\r\nimport media3 from '../../public/images/media/media-3.jpg';\r\nimport UploadImageModal from '../../components/assessment/shared/UploadImageModal'\r\nconst BlogPage =(props) => {\r\n  const dispatch = useDispatch();\r\n  const [ openModal, setModalOpen ]  = useState(false);\r\n  const blogForm = useSelector((state)=>state.form.blogForm)\r\n  const userData = useSelector(state => state.user.sessionData?.data?.data)\r\n  const unsplashImages  = useSelector((state) => state.assessment.unsplashImages)\r\n  const isReadyPublish = useSelector((state) => state.blog.isReadyPublish)\r\n  const initialValue = [\r\n    {\r\n      type: 'paragraph',\r\n      children: [\r\n        { text: 'This is editable ' },\r\n        { text: 'rich', bold: true },\r\n        { text: ' text, ' },\r\n        { text: 'much', italic: true },\r\n        { text: ' better than a ' },\r\n        { text: '<textarea>', code: true },\r\n        { text: '!' },\r\n      ],\r\n    },\r\n    {\r\n      type: 'paragraph',\r\n      children: [\r\n        {\r\n          text:\r\n            \"Since it's rich text, you can do things like turn a selection of text \",\r\n        },\r\n        { text: 'bold', bold: true },\r\n        {\r\n          text:\r\n            ', or add a semantically rendered block quote in the middle of the page, like this:',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      type: 'block-quote',\r\n      children: [{ text: 'A wise quote.' }],\r\n    },\r\n    {\r\n      type: 'paragraph',\r\n      children: [{ text: 'Try it out for yourself!' }],\r\n    },\r\n  ]\r\n\r\n  const [rteData, setRTEData] = useState(initialValue)\r\n  const { handleSubmit } = props;\r\n\r\n  const submitData = (formData) => {\r\n    //formData['image'] = formData.blogUrl\r\n    const data = {\r\n      type:\"blog\",\r\n      content: formData.data,\r\n      imageUrl: formData.blogUrl,\r\n      title: formData.title\r\n    }\r\n    dispatch(createBlog(data))\r\n  }\r\n\r\n    useEffect(()=>{\r\n      const query = 'blogs'\r\n      dispatch(getUnsplash('/photos',query))\r\n      dispatch(getCurrentUser())\r\n    },[])\r\n\r\n\r\n  const handleRTEdata = (data) =>{\r\n    dispatch(change('blogForm', 'data', data))\r\n    setRTEData(data)\r\n  }\r\n  const handleToggleModal = () => {\r\n    setModalOpen(!openModal)\r\n  }\r\n  const handleSearch = (event) => {\r\n\t  const query = event.currentTarget.value || 'cat'\r\n\t\tdispatch(getUnsplash('/photos',query))\r\n\t}\r\n\r\n\tconst getBase64 = (base64) => {\r\n\t\tdispatch(reduxChange('blogForm', 'blogUrl', base64))\r\n\t}\r\n\r\n\tconst clearImage = () => {\r\n\t\tdispatch(reduxChange('blogForm', 'blogUrl', null))\r\n\t}\r\n\r\n\r\n    return(\r\n      <section className=\"dashboard-wrapper\">\r\n        <aside className=\"dashboard-menu\">\r\n        <ul>\r\n            <li >\r\n              <Link to=\"/dashboard\">\r\n              Dashboard\r\n                <DashboardMenuIcon />\r\n              </Link>\r\n            </li>\r\n            <li className=\"active\">\r\n              <Link to=\"/blog\">\r\n              Blog\r\n                <BlogMenuIcon />\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"#\">\r\n              Test\r\n                <DashboardMenuIcon />\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"#\">\r\n              Test\r\n                <DashboardMenuIcon />\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"#\">\r\n              Test\r\n                <DashboardMenuIcon />\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"#\">\r\n              Test\r\n                <DashboardMenuIcon />\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </aside>\r\n        <main className=\"dashboard-data\">\r\n          <section className=\"dashboard-body\">\r\n            <div className=\"blog-creation\">\r\n              <Form onSubmit={handleSubmit(submitData)}>\r\n                <div className=\"blog-creation-head\">\r\n                  <div className=\"blog-creation-head-left\">\r\n                    <Form.Group className=\"blog-title-group\">\r\n                        <Field\r\n                              name=\"title\"\r\n                              component={ renderFieldWG }\r\n                              placeholder={ 'Blog post title' }\r\n                            />\r\n                        <Form.Text>\r\n                          March 25, 2020 / 4 min read / Author Name\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <div className=\"upload-feature-img-wrap\">\r\n                    <div className=\"upload-feature-img\" onClick={handleToggleModal}>\r\n                      {blogForm?.values?.blogUrl ? <img src={blogForm?.values?.blogUrl} /> : 'Click here to edit feature image'}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"blog-creation-author-box\">\r\n                    <h5>Author Box</h5>\r\n                    <div className=\"author-info\">\r\n                      <div className=\"author-img\">\r\n                        <img src={profilePic} alt=\"Jason Miller\" />\r\n                      </div>\r\n                      <div className=\"author-name\">\r\n                          <span>{userData && `${userData.user?.firstName} ${userData.user?.lastName}`}</span>\r\n                          \r\n                      </div>\r\n                    </div>\r\n                    <div className=\"author-bio\">\r\n                      <h6>About</h6>\r\n                      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n                    </div>\r\n                    <ul className=\"author-social-links\">\r\n                      <li className=\"facebook\">\r\n                        <a>\r\n                          <Facebook />\r\n                        </a>\r\n                      </li>\r\n                      <li className=\"linkedin\">\r\n                        <a>\r\n                          <LinkedIn />\r\n                        </a>\r\n                      </li>\r\n                      <li className=\"twitter\">\r\n                        <a>\r\n                          <Twitter />\r\n                        </a>\r\n                      </li>\r\n                      <li className=\"youtube\">\r\n                        <a>\r\n                          <YouTube />\r\n                        </a>\r\n                      </li>\r\n                      <li className=\"instagram\">\r\n                        <a>\r\n                          <Instagram />\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"blog-creation-content\">\r\n                  <div className=\"word-count\">\r\n                    <div className=\"word-count-progressbar\">\r\n                      <label>Word Count: </label>\r\n                    <ProgressBar now=\"72\" label=\"357/500\" />\r\n                    </div>\r\n\r\n                  </div>\r\n                  <div className=\"blog-editor\">\r\n                  <RichTextEditor readOnly={false} setRTEData={handleRTEdata} initialValue={initialValue} />\r\n                  </div>\r\n                </div>\r\n               {/*\r\n                <div className=\"blog-action\">\r\n                  <div className=\"blog-action-box\">\r\n                    <h5>\r\n                      <span>Blog actions</span>\r\n                      <a><CloseIcon /></a>\r\n                    </h5>\r\n                    <ul>\r\n                      <li>\r\n                        <SmallRadio />\r\n                        <span>Save Layout</span>\r\n                      </li>\r\n                      <li className=\"active\">\r\n                      <SmallRadioChecked />\r\n                      <span>SEO Booster</span>\r\n                      </li>\r\n                      <li className=\"active\">\r\n                        <SmallRadioChecked />\r\n                        <span>Social Media</span>\r\n                        <a>Edit</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n                <div className=\"related-blog\">\r\n                  <h3>Related</h3>\r\n                  <ul className=\"blog-list\">\r\n                    <li>\r\n                      <div className=\"blog-box\">\r\n                        <div className=\"blog-img\">\r\n                          <img src={media1} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"blog-detail\">\r\n\r\n                          <div className=\"blog-title\">\r\n                          <h4>Top 10</h4>\r\n                            <span className=\"blog-date\">5h</span>\r\n                          </div>\r\n                          <p>It’s a small world.</p>\r\n                          <a className=\"read-more\">Read more</a>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <div className=\"blog-box\">\r\n                        <div className=\"blog-img\">\r\n                          <img src={media2} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"blog-detail\">\r\n                        <div className=\"blog-title\">\r\n                          <h4>101</h4>\r\n                            <span className=\"blog-date\">5h</span>\r\n                          </div>\r\n                          <p>It’s a small world.</p>\r\n                          <a className=\"read-more\">Read more</a>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <div className=\"blog-box\">\r\n                        <div className=\"blog-img\">\r\n                          <img src={media3} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"blog-detail\">\r\n                          <div className=\"blog-title\">\r\n                          <h4>Only for you</h4>\r\n                            <span className=\"blog-date\">5h</span>\r\n                          </div>\r\n\r\n                          <p>It’s a small world.</p>\r\n                          <a className=\"read-more\">Read more</a>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div className=\"blog-seo-booster\">\r\n                  <h3 className=\"seo-heading\">\r\n                    <span>SEO Booster</span>\r\n                    <span className=\"icon\">\r\n                      <OpenArrow />\r\n                    </span>\r\n                  </h3>\r\n                  <div className=\"seo-content\">\r\n                    <p><b>What’s this for?</b> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p>\r\n                    <Row className=\"seo-form\">\r\n                      <Col className=\"col-6\">\r\n                        <Form.Group className=\"focus-keyword\">\r\n                          <Form.Label>Focus Keyword:</Form.Label>\r\n                          <Form.Control type=\"text\" placeholder=\"Keyword\" />\r\n                          <Form.Text >\r\n                            <div className=\"seo-progress-bar\">\r\n\r\n                            </div>\r\n                          <span class=\"primary\">Too short (13/180)</span>\r\n                          </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                          <Form.Label>Page name:</Form.Label>\r\n                          <Form.Control type=\"text\" placeholder=\"Page name\" />\r\n                          <Form.Text>\r\n\r\n                          <div className=\"seo-progress-bar\">\r\n                            <span className=\"success\">\r\n                              Good\r\n                            </span>\r\n                            <div className=\"seo-strength\">\r\n                          <ProgressBar now=\"72\" className=\"success\" />\r\n                          </div>\r\n                          </div>\r\n                          <span>(0/180)</span>\r\n                          </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                          <Form.Label>SEO Site:</Form.Label>\r\n                          <Form.Control type=\"text\" placeholder=\"Site name\" />\r\n                          <Form.Text>\r\n                          <div className=\"seo-progress-bar\">\r\n                            <span className=\"danger\">\r\n                              Bad\r\n                            </span>\r\n                            <div className=\"seo-strength\">\r\n                          <ProgressBar now=\"72\" className=\"danger\" />\r\n                          </div>\r\n                          </div>\r\n                          <span>(0/180)</span>\r\n                          </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                          <Form.Label>SEO Description:</Form.Label>\r\n                          <Form.Control as=\"textarea\" placeholder=\"Give a relevant description to your page\" />\r\n                          <Form.Text>\r\n                          <div className=\"seo-progress-bar\"></div>\r\n                          <span>(0/180)</span>\r\n                          </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"url-control\">\r\n                          <Form.Label>Page URL:</Form.Label>\r\n                          <Form.Control type=\"url\" placeholder=\"URL\" />\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col className=\"col-6 seo-preview\">\r\n                        <Form.Group className=\"focus-keyword\">\r\n                            <Form.Label>Preview on Google:</Form.Label>\r\n                        </Form.Group>\r\n                        <div className=\"seo-meta-preview\">\r\n                          <h4>\r\n                          Page name\r\n                          <span className=\"seprator\"></span>\r\n                          Site name\r\n                          </h4>\r\n                          <a>http://jmason.webfin.com/blog1/blogpost</a>\r\n                          <p>Sample Copy Text</p>\r\n                        </div>\r\n                        <Form.Group className=\"index-site-toggle\">\r\n                          <Form.Check\r\n                             type=\"switch\"\r\n                             label=\"Let search engines index your main site pages\"\r\n                          />\r\n                        </Form.Group> \r\n\r\n                        \r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </div>\r\n              */}  \r\n\r\n              <UploadImageModal \r\n                fieldName={'blogUrl'} \r\n                clearImage={clearImage} \r\n                previewFile={blogForm.values?.blogUrl} \r\n                getBase64={getBase64} \r\n                handleSearch={handleSearch} \r\n                unsplashImages={unsplashImages} \r\n                openModal={openModal} \r\n                handleToggleModal={handleToggleModal} \r\n              />\r\n\r\n              <div className=\"blog-btns\">\r\n                <Button type='submit' variant=\"primary\">Save</Button>\r\n                  {/*!isReadyPublish ? <Button type='submit' variant=\"primary\">Save</Button> : <Button type='button' disabled={true} variant=\"primary\">Save</Button>*/}\r\n                  {/*isReadyPublish ? <a href='javascript:void(0)' className='btn btn-success' onClick={() => dispatch(callPublish())}>Publish</a> : \r\n                  <a href='javascript:void(0)' className='btn'>Publish</a>\r\n                  */}\r\n                </div>\r\n              \r\n              </Form>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </section>\r\n    )\r\n}\r\n\r\nBlogPage.propTypes = {\r\n  handleSubmit: PropTypes.func\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'blogForm',\r\n  validate\r\n})(BlogPage);\r\n","C:\\react\\webFin-frontend\\frontend\\src\\pages\\confirm-account\\index.js",["351"],"import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { resendCode, emailVerification } from '../../middleware/auth'\r\n// import withConfirmAccount from '../../components/hoc/withConfirmAccount'\r\n\r\nimport\r\n  {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Carousel,\r\n    Button\r\n  }\r\nfrom 'react-bootstrap';\r\nimport { renderOTPField} from '../../utils/formUtils'\r\nimport { registerValidate as validate } from '../../utils/validates'\r\nimport { reduxForm } from 'redux-form';\r\nimport { Field } from 'redux-form';\r\nimport accountSlider1 from '../../public/images/account-slider-1.png';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst ConfirmAccount = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { handleSubmit } = props\r\n  const submitData = (data) => {\r\n    dispatch(emailVerification(data))\r\n  }\r\n\r\n  const handleResendCode = () => {\r\n    dispatch(resendCode())\r\n  }\r\n\r\n  return(\r\n    <section className=\"forgot-password-section main-section main-form-section\">\r\n        <Container className=\"positionUnset\">\r\n          <Row className=\"align-items-center positionUnset\">\r\n            <Col className=\"crausel-side crausel-side-left col-6 text-center\">\r\n                <Carousel controls={false} className=\"carousel slide\" id=\"sampleSlide\">\r\n                  <Carousel.Item className=\"carousel-item\">\r\n                    <img src={accountSlider1} alt='slider1' />\r\n                  </Carousel.Item>\r\n                  <Carousel.Item className=\"carousel-item\">\r\n                    <img src={accountSlider1} alt='slider2'/>\r\n                  </Carousel.Item>\r\n                  <Carousel.Item className=\"carousel-item\">\r\n                    <img src={accountSlider1} alt='slider3'/>\r\n                  </Carousel.Item>\r\n                </Carousel>\r\n              </Col>\r\n            <Col className=\"col-6 form-side form-side-right\">\r\n\r\n              <div className=\"forget-forms signup-forms\">\r\n\r\n                <Form className=\"form\" onSubmit={handleSubmit(submitData)}>\r\n                  <div className=\"forget-form-inner\">\r\n                      <div className=\"forget-forms-element\">\r\n                      <div className=\"small-wrapper\">\r\n                          <h1 className=\"section-heading\">\r\n                          Confirm account\r\n                          </h1>\r\n                          <p className=\"heading-detail\">\r\n                          Please enter confirmation code.\r\n                          </p>\r\n\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                              <Form.Label>Code:</Form.Label>\r\n                              <Field\r\n                                  label=\"Code\"\r\n                                  name=\"code\"\r\n                                  type=\"text\"\r\n                                  numInputs={6}\r\n                                  component={ renderOTPField }\r\n                                  formClass=\"otpFieldsInput\"\r\n                              />\r\n                              <Form.Text className=\"form-text\">\r\n                                Review your email!\r\n                              </Form.Text>\r\n                            </Form.Group>\r\n\r\n                      </div>\r\n                      </div>\r\n                      <div className=\"forgot-btns\">\r\n                      <div className=\"small-wrapper\">\r\n                          <Button className=\"btn btn-primary\" type=\"submit\">\r\n                          Continue\r\n                          </Button>\r\n                          <p className=\"heading-detail\">\r\n                          Didn't receive code  <a href=\"#\" onClick={handleResendCode} >Resend</a>\r\n                          </p>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n\r\n                </Form>\r\n\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n    </section>\r\n\r\n)}\r\n\r\nConfirmAccount.propTypes = {\r\n  handleSubmit: PropTypes.func\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'confirmAcouuntForm',\r\n  validate\r\n})(ConfirmAccount);\r\n","C:\\react\\webFin-frontend\\frontend\\src\\utils\\helpers.js",["352"],"import { ROUTES } from '../constants/appRoutes';\r\nimport _ from 'lodash';\r\nimport { getItem } from './cache';\r\nexport const addBodyClass = (pathname) =>{\r\n    const path = pathname\r\n    document.body.className = ''\r\n\r\n    if(path === '/'){\r\n        document.body.classList.add('light-bg');\r\n    } else if(path === ROUTES.REGISTER){\r\n        document.body.classList.add('blue-left');\r\n        document.body.classList.add('no-footer');\r\n    } else if(path === ROUTES.LOGIN){\r\n        document.body.classList.add('no-footer');\r\n    } else if(path === ROUTES.FORGET_PASSWORD){\r\n        document.body.classList.add('blue-right');\r\n        document.body.classList.add('no-footer');\r\n    } else if(path === ROUTES.TERMS_CONDITIONS){\r\n        document.body.classList.add('light-bg');\r\n    } else if(path === ROUTES.PRIVACY_POLICY){\r\n        document.body.classList.add('light-bg');\r\n    } else if(path === '/404'){\r\n        document.body.classList.add('light-bg');\r\n    } else if(path === ROUTES.ASSESSMENT){\r\n        document.body.classList.add('no-footer');\r\n        document.body.classList.add('light-bg');\r\n    } else if(path === ROUTES.CONFIRM_ACCOUNT){\r\n        document.body.classList.add('blue-left');\r\n        document.body.classList.add('no-footer');\r\n    }\r\n}\r\n\r\nexport const getUser = () => {\r\n    return getItem('user') && JSON.parse(getItem('user'));\r\n}\r\n\r\nexport const isLoggedIn = () => {\r\n    const user = getUser();\r\n    return user && Object.keys(user).length > 0 && user.constructor === Object;\r\n}\r\n\r\nexport const getLabel = (data,value) => {\r\n    return data.filter((item)=> item.value === value)[0]?.label\r\n}\r\n\r\nexport const isLoading = (state) => {\r\n    const result = Object.keys(state)?.filter((item) => state[item].loading)\r\n    return result?.length > 0\r\n}\r\n\r\nexport const assessmentIntialValues = () =>{\r\n    const result = sessionStorage.getItem('assessmentForm')\r\n    return result ? JSON.parse(result) : {}\r\n}\r\n\r\nexport const togglePassword = (event) => {\r\n    const show = `<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M14.12 14.12C13.8454 14.4147 13.5141 14.6511 13.1462 14.8151C12.7782 14.9791 12.3809 15.0673 11.9781 15.0744C11.5753 15.0815 11.1752 15.0074 10.8016 14.8565C10.4281 14.7056 10.0887 14.481 9.80385 14.1961C9.51897 13.9113 9.29439 13.5719 9.14351 13.1984C8.99262 12.8248 8.91853 12.4247 8.92563 12.0219C8.93274 11.6191 9.02091 11.2218 9.18488 10.8538C9.34884 10.4858 9.58525 10.1546 9.88 9.87999M17.94 17.94C16.2306 19.243 14.1491 19.9649 12 20C5 20 1 12 1 12C2.24389 9.68189 3.96914 7.6566 6.06 6.05999L17.94 17.94ZM9.9 4.23999C10.5883 4.07887 11.2931 3.99833 12 3.99999C19 3.99999 23 12 23 12C22.393 13.1356 21.6691 14.2047 20.84 15.19L9.9 4.23999Z\" stroke=\"#757575\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    </svg>`\r\n    const hide = `<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M14.12 14.12C13.8454 14.4147 13.5141 14.6511 13.1462 14.8151C12.7782 14.9791 12.3809 15.0673 11.9781 15.0744C11.5753 15.0815 11.1752 15.0074 10.8016 14.8565C10.4281 14.7056 10.0887 14.481 9.80385 14.1961C9.51897 13.9113 9.29439 13.5719 9.14351 13.1984C8.99262 12.8248 8.91853 12.4247 8.92563 12.0219C8.93274 11.6191 9.02091 11.2218 9.18488 10.8538C9.34884 10.4858 9.58525 10.1546 9.88 9.87999M17.94 17.94C16.2306 19.243 14.1491 19.9649 12 20C5 20 1 12 1 12C2.24389 9.68189 3.96914 7.6566 6.06 6.05999L17.94 17.94ZM9.9 4.23999C10.5883 4.07887 11.2931 3.99833 12 3.99999C19 3.99999 23 12 23 12C22.393 13.1356 21.6691 14.2047 20.84 15.19L9.9 4.23999Z\" stroke=\"#757575\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n        <path d=\"M1 1L23 23\" stroke=\"#757575\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n    </svg>`\r\n    const input = event.currentTarget.parentElement?.firstChild\r\n    event.currentTarget.innerHTML= input.type === 'text' ? hide : show;\r\n    input.type = input.type === 'text' ? 'password' : 'text'\r\n\r\n}\r\n\r\n\r\nexport const createFileFromUrl = async(url,id) => {\r\n    let response = await fetch(url);\r\n    let data = await response.blob();\r\n    let metadata = {\r\n      type: 'image/jpeg'\r\n    };\r\n    let file = new File([data], `${id}.jpg`, metadata);\r\n    return file\r\n}\r\n\r\nexport const bytesToSize = (bytes) =>  {\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes == 0) return '0 Byte';\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n}\r\n\r\nexport const assessmentSaved = (step,values) => {\r\n    let assessment = sessionStorage.getItem('assessmentForm')\r\n    assessment =  assessment ? JSON.parse(assessment) : {}\r\n    switch(step){\r\n        case 'step1':\r\n            return !_.isEmpty(assessment?.nicheId) && assessment.nicheId === values?.nicheId\r\n        case 'step2':\r\n            return !_.isEmpty(assessment?.colourId) && assessment.colourId === values?.colourId\r\n        case 'step3':\r\n            return !_.isEmpty(assessment?.websiteName) && assessment.websiteName === values?.websiteName\r\n        default:\r\n            return false\r\n    }\r\n\r\n}\r\n\r\nexport const queryStringToObject = (queryString) => {\r\n    const pairs = queryString.substring(1).split('&');\r\n    var array = pairs.map((el) => {\r\n      const parts = el.split('=');\r\n      return parts;\r\n    });\r\n    return Object.fromEntries(array);\r\n}\r\n\r\nexport const dataURLtoFile = (dataurl,filename) => {\r\n    const arr = dataurl.split(',');\r\n    const mime = arr[ 0 ].match(/:(.*?);/)[ 1 ];\r\n    const bstr = atob(arr[ 1 ]);\r\n    let num = bstr.length;\r\n    const u8arr = new Uint8Array(num);\r\n    while(num --){\r\n        u8arr[ num ] = bstr.charCodeAt(num);\r\n    }\r\n\r\n    return new File([ u8arr ], filename, { type:mime });\r\n}\r\n\r\nexport const uId = () => {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        const r = Math.random()*16|0, v = c === 'x' ? r : ((r&(0x3))|(0x8));\r\n        return v.toString(16);\r\n    });\r\n}\r\n\r\nexport const dataUrlToBase64 = (url, callback) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onload = function() {\r\n        var reader = new FileReader();\r\n        reader.onloadend = function() {\r\n            callback(reader.result);\r\n        }\r\n        reader.readAsDataURL(xhr.response);\r\n    };\r\n    xhr.open('GET', url);\r\n    xhr.responseType = 'blob';\r\n    xhr.send();\r\n}","C:\\react\\webFin-frontend\\frontend\\src\\reducers\\assessment.js",["353"],"import { ActionTypes } from '../actions/assessments/actionTypes'\r\nconst initialState = {\r\n    assessmentData: {},\r\n    loading: false,\r\n    domainLoading: false,\r\n    unsplashImages: [],\r\n    domains: []\r\n}\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case ActionTypes.GET_ASSESSMENT_REQUEST:\r\n        return { ...state, loading: true };\r\n      case ActionTypes.GET_ASSESSMENT_SUCCESS:\r\n        return { ...state, assessmentData: action.payload, loading: false };\r\n      case ActionTypes.GET_ASSESSMENT_FAILURE:\r\n        return { ...state, error: action.error, loading: false };\r\n      case ActionTypes.CREATE_ASSESSMENT_REQUEST:\r\n        return { ...state, loading: true };\r\n      case ActionTypes.CREATE_ASSESSMENT_SUCCESS:\r\n        return { ...state, assessmentData: action.payload, loading: false };\r\n      case ActionTypes.CREATE_ASSESSMENT_FAILURE:\r\n        return { ...state, error: action.error, loading: false };\r\n      case ActionTypes.GET_UNSPLASH_SUCCESS:\r\n        return {...state, unsplashImages: action.payload || [], loading: false}\r\n      case ActionTypes.GET_UNSPLASH_ERROR:\r\n        return {...state, unsplashImages: [], loading: false}\r\n      case ActionTypes.GET_VERIFIED_DOMAIN:\r\n        return { ...state, domains: action.payload.domains, domainLoading: false }\r\n      case ActionTypes.GET_VERIFIED_DOMAIN_REQUEST:\r\n        return { ...state, domainLoading: true }\r\n      case ActionTypes.GET_VERIFIED_DOMAIN_ERROR:\r\n        return { ...state, domains: [], domainLoading: false }\r\n      case ActionTypes.CLEAR_DOMAINS:\r\n        return { ...state, domains: [] }\r\n      default:\r\n        return state;\r\n    }\r\n  };","C:\\react\\webFin-frontend\\frontend\\src\\services\\notification\\index.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\components\\assessment\\Preview.js",["354","355","356","357"],"import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { reduxForm } from 'redux-form';\r\nimport { useSelector } from 'react-redux'\r\nimport { assessmentFormValidate as validate } from '../../utils/validates'\r\nimport TemplateLayoutOne from './shared/TemplateLayoutOne'\r\nimport WebTemplates ,{Header,Home, Banner,Blogs, Card} from 'web-templates';\r\n\r\nimport \r\n  {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    Button\r\n  }\r\nfrom 'react-bootstrap';\r\nimport preview from '../../public/images/preview.png';\r\n\r\nconst Preview = (props) => {\r\n    const {handleSubmit ,saveData, colorPalette} = props;\r\n    const assessmentForm = useSelector((state) => state.form.assessmentForm)\r\n    const colorObject = colorPalette?.filter((item) => item.value === assessmentForm?.values?.colourId)[0] || {}\r\n    const data = {\r\n\t\tcolors: colorObject?.colors || [],\r\n\t\tlogoUrl: assessmentForm?.values?.logoUrl,\r\n\t\tlogoText: assessmentForm?.values?.websiteName,\r\n        readOnly: true,\r\n        headerLinks: [{name: 'Home', url: '#'},{name: 'Blog', url: '#'},{name: 'About', url: '#'},{name: 'Contact', url: '#'}],\r\n\t}\r\n    return(\r\n\r\n\r\n        <div className=\"assesment-step assesment-step-final\">\r\n            <Row  className=\"step-form\">\r\n                <Col className=\"col-12\">\r\n                    <Container>\r\n                        <Form className=\"form\" onSubmit={handleSubmit}>  \r\n                        <div className=\"form-heading\">   \r\n                                <h2>\r\n                                Congratulation! Here is your NEW website\r\n                                </h2>\r\n                            </div>\r\n                            <Row className=\"color-palatte\">\r\n                                <Col className=\"col-12 final-blog-preview wizard-preview\">\r\n                                    <div className=\"color-preview  wizrd-blog-preview final-preview\">\r\n                                    {/*<TemplateLayoutOne />*/}\r\n                                    <WebTemplates data={data}>\r\n                                        <Header></Header>\r\n                                        <Home>\r\n                                        <Banner>\r\n                                            <h1>\r\n                                                <span>Simple Recipes for Healthier Families</span>\r\n\r\n                                            </h1>\r\n                                            <h5>Welcome to the most reliable source for healthy recipes!</h5>\r\n                                            <div className=\"wizrd-form-wrapper\">\r\n                                                <form className=\"wizrd-newsletter\">\r\n                                                    <div className=\"form-group\">\r\n                                                    <input className=\"form-control\" placeholder=\"Enter your email\" type=\"text\" />\r\n                                                    </div>\r\n                                                    <button type=\"submit\" className=\"btn btn-primary\">Subscribe!</button>\r\n                                                </form>\r\n                                                </div>\r\n                                        </Banner>\r\n                                        <Blogs>\r\n                                            <h2 className=\"wizrd-section-heading\">\r\n                                                Recent Blog Posts\r\n                                                <a href=\"\">View All</a>\r\n                                                </h2>\r\n                                                <ul className=\"wizrd-blog-list\">\r\n                                                    <li>\r\n                                                        <Card \r\n                                                        image={'https://homepages.cae.wisc.edu/~ece533/images/boat.png'}\r\n                                                        >\r\n                                                        <h3>The Joy of Cooking</h3>\r\n                                                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Imperdiet praesent eu accumsan, curabitur. Nulla viverra aliquam viverra id a.</p>\r\n                                                        </Card>       \r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <Card \r\n                                                        image={'https://homepages.cae.wisc.edu/~ece533/images/boat.png'}\r\n                                                        >\r\n                                                        <h3>The Joy of Cooking</h3>\r\n                                                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Imperdiet praesent eu accumsan, curabitur. Nulla viverra aliquam viverra id a.</p>\r\n                                                        </Card>       \r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <Card \r\n                                                        image={'https://homepages.cae.wisc.edu/~ece533/images/boat.png'}\r\n                                                        >\r\n                                                        <h3>The Joy of Cooking</h3>\r\n                                                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Imperdiet praesent eu accumsan, curabitur. Nulla viverra aliquam viverra id a.</p>\r\n                                                        </Card>       \r\n                                                    </li>\r\n                                                </ul>\r\n                                        </Blogs>\r\n                                        </Home>\r\n                                    </WebTemplates>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                                <div className=\"step-btns\">\r\n                                <div className=\"step-btn-left\"></div>\r\n                                <div className=\"step-btn-right\">\r\n                                    <div className=\"step-btn\">\r\n                                    <Button className=\"btn btn-primary\" type=\"submit\">\r\n                                    Save your work!\r\n                                    </Button>\r\n                                  \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n        \r\n    )\r\n}\r\nPreview.propTypes = {\r\n    handleSubmit: PropTypes.func,\r\n    submitData: PropTypes.func,\r\n    saveData: PropTypes.func,\r\n    colorPalette: PropTypes.object\r\n};\r\nexport default reduxForm({\r\n    form: 'assessmentForm',\r\n    destroyOnUnmount: false,\r\n    validate\r\n  })(Preview);","C:\\react\\webFin-frontend\\frontend\\src\\components\\assessment\\StepThree.js",["358","359","360","361","362"],"import React,{ useState , useEffect } from 'react'\r\nimport { Field } from 'redux-form';\r\nimport { renderFieldChangeWG, renderStyleMultipleRadio } from '../../utils/formUtils'\r\nimport { getLabel ,assessmentSaved } from '../../utils/helpers'\r\nimport { getUnsplash ,getVerifiedDomain} from '../../middleware/assessments'\r\nimport PropTypes from 'prop-types';\r\nimport { assessmentFormValidate as validate } from '../../utils/validates'\r\nimport { reduxForm } from 'redux-form';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { change as reduxChange } from 'redux-form'\r\nimport WebTemplates ,{Header, Home, Banner,Blogs, Card} from 'web-templates';\r\nimport _ from 'lodash';\r\nimport \r\n  {\r\n    Form,\r\n    Button,\r\n    Container,\r\n    Col,\r\n\tRow,\r\n  }\r\nfrom 'react-bootstrap';\r\nimport enterIcon from '../../public/images/enter-icon.png';\r\nimport UploadImageModal from './shared/UploadImageModal'\r\nconst StepThree = (props) => {\r\n\tconst [ isSave, setSave ] = useState(false)\r\n\tconst dispatch = useDispatch()\r\n\tconst [openModal, setModalOpen ] = useState(false)\r\n\tconst form  = useSelector((state) => state.form.assessmentForm)\r\n\tconst domains  = useSelector((state) => state.assessment.domains)\r\n\tconst domainLoading  = useSelector((state) => state.assessment.domainLoading)\r\n\tconst unsplashImages  = useSelector((state) => state.assessment.unsplashImages)\r\n\tconst { handleSubmit ,prevPage ,onSubmit,assessmentData, colorPalette, saveData, setStep } = props;\r\n\tconst colorObject = colorPalette.filter((item) => item.value === form.values.colourId)[0] || {}\r\n\tconst data = {\r\n\t\tcolors: colorObject?.colors || [],\r\n\t\tlogoUrl: form.values.logoUrl,\r\n\t\tlogoText: form.values.websiteName,\r\n\t\theaderLinks: [{name: 'Home', url: '#'},{name: 'Blog', url: '#'},{name: 'About', url: '#'},{name: 'Contact', url: '#'}],\r\n\t\treadOnly: true\r\n\t}\r\n    const handleToggleModal = () => {\r\n        setModalOpen(!openModal)\r\n\t}\r\n\t\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst query = form.values?.nicheId && getLabel(assessmentData.niches, form.values?.nicheId)\r\n\t\tdispatch(getUnsplash('/photos',query))\r\n\t},[])\r\n\r\n\r\n\tuseEffect(()=>{\r\n        setSave(assessmentSaved('step3',form?.values))\r\n\t},[form?.values])\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tif(!_.isEmpty(domains)){\r\n\t\t\t!domainLoading && dispatch(reduxChange('assessmentForm', 'domain', domains[0]))\r\n\t\t}\r\n\t},[domains, domainLoading])\r\n\r\n\tconst handleSearch = (event) => {\r\n\t\tlet query  = form.values?.nicheId && getLabel(assessmentData.niches, form.values?.nicheId)\r\n\t\tquery = event.currentTarget.value || query\r\n\t\tdispatch(getUnsplash('/photos',query))\r\n\t}\r\n\r\n\tconst getBase64 = (base64) => {\r\n\t\tdispatch(reduxChange('assessmentForm', 'logoUrl', base64))\r\n\t}\r\n\r\n\tconst clearImage = () => {\r\n\t\tdispatch(reduxChange('assessmentForm', 'logoUrl', null))\r\n\t}\r\n\tconst handleSave = () => {\r\n        setSave(true)\r\n        saveData()\r\n\t}\r\n\t\r\n\tconst handleChange = (value) => {\r\n\t\t\r\n\t\tif(value){\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\tdispatch(reduxChange('assessmentForm', 'domain', null))\r\n\t\t\t\tdispatch(getVerifiedDomain(value))\r\n\t\t\t},600)\r\n\t\t\t\r\n\t\t}else{dispatch({type: 'CLEAR_DOMAINS'})}\r\n\t}\r\n\r\n\tconst getDomains = () => {\r\n\t\tconst result = domains?.map((item) => ({label: item, value: item}))\r\n\t\treturn _.isEmpty(result) ? form?.values?.websiteName && form.values?.domain && [{label: form.values?.domain,value: form.values?.domain}] : result\r\n\t}\r\n\r\n\tconst handleSubmitData = (data) => {\r\n\t\tif(data.nicheId && data.colourId && data.websiteName && data.domain){\r\n\t\t\tonSubmit(data)\r\n\t\t}\r\n\t}\r\n\r\n\tconst domainsOptions = getDomains() || []\r\nreturn(\r\n    <div className=\"assesment-step assesment-step-2\">\r\n      <Row  className=\"step-form\">\r\n\t\t\t\t<Col className=\"col-12\">\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Form className=\"form\" onSubmit={handleSubmit(handleSubmitData)}>  \r\n\t\t\t\t\t\t\t<div className=\"form-heading\">   \r\n\t\t\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t\tName Your Website!\r\n\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Row className=\"name-website\">\r\n\t\t\t\t\t\t\t\t<Col className=\"col-6 name-website-selector\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"small-wrapper\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"websiteName\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={ renderFieldChangeWG }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminLength={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={ 'Enter your website name' }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{domainLoading && <div className=\"small-loader\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ form.values.websiteName &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>domain</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"domain\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={ domainsOptions || []}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={ renderStyleMultipleRadio }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={ 'no' }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={ 'domain' }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='styled-radio-btn'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisIcons={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"logo-optional\">Optional! if you have logo upload here</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"upload-media-btn\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button type='button' onClick={handleToggleModal}>upload your logo</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ul className=\"cat-list\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{form.values?.nicheId && <li onClick={() => setStep(1)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ getLabel(assessmentData.niches, form.values?.nicheId)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{form.values?.colourId &&<li onClick={() => setStep(2)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{getLabel(assessmentData.colorPalette, form.values?.colourId)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col className=\"col-6 name-website-selector-preview wizard-preview\">\r\n\t\t\t\t\t\t\t\t\t<h4>Preview</h4>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"blog-preview wizrd-blog-preview color-palate-preview \">\r\n\t\t\t\t\t\t\t\t\t\t<WebTemplates data={data}>\r\n                                        <Header></Header>\r\n                                        <Home>\r\n                                        <Banner>\r\n                                            <h1>\r\n                                                <span>Simple Recipes for Healthier Families</span>\r\n\r\n                                            </h1>\r\n                                            <h5>Welcome to the most reliable source for healthy recipes!</h5>\r\n                                            <div className=\"wizrd-form-wrapper\">\r\n\t\t\t\t\t\t\t\t\t\t\t<form className=\"wizrd-newsletter\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input className=\"form-control\" placeholder=\"Enter your email\" type=\"text\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">Subscribe!</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                        </Banner>\r\n                                        \r\n                                        </Home>\r\n                                    </WebTemplates>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className=\"step-btns\">\r\n\t\t\t\t\t\t\t\t<div className=\"step-btn-left\">\r\n\t\t\t\t\t\t\t\t<Button type=\"button\" onClick={prevPage} variant=\"secondary\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\tBack  \r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t<div className=\"step-btn-right\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"step-btn\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"button\"  disabled={!props.valid || domainLoading} onClick={handleSave} variant=\"light\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t{ isSave ? 'Saved' : 'Save' }  \r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"step-btn\">\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t{ props.valid && form?.values?.domain && !domainLoading ?\r\n                                         <Button type=\"submit\" variant=\"primary\">\r\n                                         Next\r\n                                         </Button>\r\n                                        : \r\n                                        <Button type=\"button\" disabled={true} variant=\"primary\">\r\n                                        Next\r\n                                        </Button>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"enter-btn\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tor Press Enter\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={enterIcon} alt=\"Enter\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<UploadImageModal fieldName={'logoUrl'} clearImage={clearImage} previewFile={form.values?.logoUrl} getBase64={getBase64} handleSearch={handleSearch} unsplashImages={unsplashImages} openModal={openModal} handleToggleModal={handleToggleModal} />\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Col>\r\n      </Row>\r\n    </div>\r\n        \r\n    )\r\n}\r\nStepThree.propTypes = {\r\n    handleSubmit: PropTypes.func,\r\n    submitData: PropTypes.func,\r\n    assessmentData: PropTypes.object,\r\n\tsaveData: PropTypes.func,\r\n\tcolorPalette: PropTypes.object,\r\n\tsetStep: PropTypes.func\r\n};\r\nexport default reduxForm({\r\n    form: 'assessmentForm',\r\n    destroyOnUnmount: false,\r\n    validate\r\n  })(StepThree);","C:\\react\\webFin-frontend\\frontend\\src\\utils\\cache.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\components\\assessment\\StepOne.js",["363","364","365","366"],"import React, { useEffect, useState } from 'react'\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\n// import Link from 'next/link'\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux'\r\nimport { renderStyleMultipleRadio } from '../../utils/formUtils'\r\nimport { assessmentFormValidate as validate } from '../../utils/validates'\r\nimport { assessmentIntialValues , assessmentSaved } from '../../utils/helpers'\r\nimport enterIcon from '../../public/images/enter-icon.png';\r\nimport _ from 'lodash'\r\nimport\r\n  {\r\n    Form,\r\n    Button,\r\n    Container,\r\n    Col,\r\n    Row,\r\n  }\r\nfrom 'react-bootstrap';\r\n\r\nconst StepOne = (props) => {\r\n    const [isSave, setSave ] = useState(false)\r\n    const { handleSubmit, kindOfBuild, saveData, initialize ,values,anyTouched} = props;\r\n    const assessmentForm = useSelector((state) => state.form.assessmentForm)\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!_.isEmpty(assessmentIntialValues())){\r\n            initialize(assessmentIntialValues())\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        setSave(assessmentSaved('step1',assessmentForm?.values))\r\n    },[assessmentForm?.values])\r\n\r\n\r\n    const handleSave = () => {\r\n        setSave(true)\r\n        saveData()\r\n    }\r\n    return(\r\n        <div className=\"assesment-step assesment-step-1\">\r\n            <Row className=\"step-banner\">\r\n                <Col className=\"col-12\">\r\n                    <Container>\r\n                        <Row className=\"back-to-home\">\r\n                            <Col className=\"col-12\">\r\n                                <Link to=\"/\">\r\n                                    <span>\r\n                                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M15.5 18L9.5 12L15.5 6\" stroke=\"white\" strokeLinejoin=\"round\"/>\r\n                                    </svg>\r\n                                    Back to Home\r\n                                    </span>\r\n                                </Link>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"col-12\">\r\n                                <h1>\r\n                                Let’s start!\r\n                                </h1>\r\n                                {/* <p>\r\n                                Answer some questions for us and we’ll build a website for you.\r\n                                </p> */}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"step-form\">\r\n                <Col className=\"col-12\">\r\n                    <Container>\r\n                        <Form className=\"form\" onSubmit={handleSubmit}>\r\n                            <div className=\"form-heading\">\r\n                                <h2>\r\n                                What kind you blog are you looking to build ?\r\n                                </h2>\r\n                            </div>\r\n                            <div className=\"category-wrapper\">\r\n                            <Field\r\n                                name=\"nicheId\"\r\n                                options={ kindOfBuild || []}\r\n                                component={ renderStyleMultipleRadio }\r\n                                defaultValue={ 'no' }\r\n                                placeholder={ 'gaveCraving' }\r\n                                className='styled-radio-btn'\r\n                                imgWidth=\"30px\"\r\n                                isIcons={true}\r\n                            />\r\n                            </div>\r\n                            <div className=\"step-btns\">\r\n                                <div className=\"step-btn-left\">\r\n\r\n                                </div>\r\n                                <div className=\"step-btn-right\">\r\n                                    <div className=\"step-btn\">\r\n                                        <Button type=\"button\" disabled={!props.valid} onClick={handleSave} variant=\"light\" >\r\n                                        {isSave ? 'Saved' : 'Save'}\r\n                                        </Button>\r\n                                    </div>\r\n                                    <div className=\"step-btn\">\r\n                                        <span>\r\n                                        { props.valid  ?\r\n                                         <Button type=\"submit\" variant=\"primary\">\r\n                                         Next\r\n                                         </Button>\r\n                                        :\r\n                                        <Button type=\"button\" disabled={true} variant=\"primary\">\r\n                                        Next\r\n                                        </Button>}\r\n                                        </span>\r\n                                        <span className=\"enter-btn\">\r\n                                            <a>\r\n                                            or Press Enter\r\n                                            <img src={enterIcon} alt=\"Enter\" />\r\n                                            </a>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nStepOne.propTypes = {\r\n    handleSubmit: PropTypes.func,\r\n    submitData: PropTypes.func,\r\n    saveData: PropTypes.func,\r\n};\r\nexport default reduxForm({\r\n    form: 'assessmentForm',\r\n    destroyOnUnmount: false,\r\n    validate\r\n  })(StepOne);","C:\\react\\webFin-frontend\\frontend\\src\\components\\forget-password\\ForgetPasswordForm.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\utils\\formUtils\\index.js",["367","368","369","370"],"/* eslint-disable react/prop-types */\r\n/*\r\n * Collection of redux form fields\r\n * With some validations over these fields\r\n*/\r\n\r\nimport React from 'react';\r\nimport { Form, Row } from 'react-bootstrap';\r\nimport OtpInput from 'react-otp-input';\r\nimport Dropzone from 'react-dropzone'\r\n\r\nexport const Validations = (props) => {\r\n    const {\r\n        touched,\r\n        error,\r\n        validationError,\r\n        warning,\r\n    } = props.props;\r\n\r\n    return (\r\n        <>\r\n            <p>\r\n                {touched && ((error && <span className=\"field_error\">{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </p>\r\n            {validationError && (\r\n                <p>\r\n                    {(validationError && <span className=\"field_error\">{validationError}</span>)}\r\n                </p>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nconst renderFieldWG = (props) => {\r\n    const {\r\n        input,\r\n        label,\r\n        name,\r\n        type,\r\n        placeholder,\r\n        disabled,\r\n        validationError,\r\n        meta: { touched, error, warning },\r\n        maxLength,\r\n        handleKeyUp,\r\n        rows,\r\n        defaultWarning\r\n    } = props;\r\n\r\n    const changeValue = (event) =>{\r\n        handleKeyUp && handleKeyUp(event.currentTarget.value)\r\n        //input.onChange(event.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <Form.Group controlId={name}>\r\n           { label &&  <Form.Label>{label || ''}</Form.Label> }\r\n            <Form.Control rows={ rows } { ...input } onBlur={changeValue}  maxLength={ maxLength } disabled={ disabled || false } type={ type } className={ validationError || (touched && error) ? 'validation-error' : '' } placeholder={ placeholder || '' } />\r\n            {defaultWarning && !input.value && <span className=\"default-warning\"><i className=\"fas fa-exclamation-triangle\"></i> {defaultWarning}</span>}\r\n            <Validations\r\n                props={ {\r\n                    touched,\r\n                    error,\r\n                    validationError,\r\n                    warning,\r\n                } }\r\n            />\r\n        </Form.Group>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst renderFieldChangeWG = (props) => {\r\n    const {\r\n        input,\r\n        label,\r\n        name,\r\n        type,\r\n        placeholder,\r\n        handleChange,\r\n        disabled,\r\n        validationError,\r\n        meta: { touched, error, warning },\r\n        maxLength,\r\n        handleKeyUp,\r\n        rows,\r\n        defaultWarning\r\n    } = props;\r\n\r\n    const changeValue = (event) =>{\r\n        input.onChange(event.target?.value?.replace(/[^a-zA-Z0-9 ]/gi, ''))\r\n        handleChange && handleChange(event.target?.value?.replace(/[^a-zA-Z0-9 ]/gi, ''))\r\n    }\r\n\r\n    return (\r\n        <Form.Group controlId={name}>\r\n           { label &&  <Form.Label>{label || ''}</Form.Label> }\r\n            <Form.Control rows={ rows } { ...input } onChange={changeValue}  maxLength={ maxLength } disabled={ disabled || false } type={ type } className={ validationError || (touched && error) ? 'validation-error' : '' } placeholder={ placeholder || '' } />\r\n            {defaultWarning && !input.value && <span className=\"default-warning\"><i className=\"fas fa-exclamation-triangle\"></i> {defaultWarning}</span>}\r\n            <Validations\r\n                props={ {\r\n                    touched,\r\n                    error,\r\n                    validationError,\r\n                    warning,\r\n                } }\r\n            />\r\n        </Form.Group>\r\n    );\r\n};\r\n\r\nconst renderField = (props) => {\r\n    const {\r\n        input,\r\n        type,\r\n        placeholder,\r\n        disabled,\r\n        validationError,\r\n        meta: { touched, error, warning },\r\n        maxLength,\r\n        rows,\r\n        defaultWarning\r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n            <Form.Control rows={ rows } { ...input }  maxLength={ maxLength } disabled={ disabled || false } type={ type } className={ validationError || (touched && error) ? 'form-control validation-error' : 'form-control' } placeholder={ placeholder || '' } />\r\n            {defaultWarning && !input.value && <span className=\"default-warning\"><i className=\"fas fa-exclamation-triangle\"></i> {defaultWarning}</span>}\r\n            <Validations\r\n                props={ {\r\n                    touched,\r\n                    error,\r\n                    validationError,\r\n                    warning,\r\n                } }\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst renderOTPField = (props) => {\r\n    const {\r\n        input,\r\n        validationError,\r\n        meta: { touched, error, warning },\r\n        formClass,\r\n        numInputs,\r\n        defaultValue\r\n    } = props;\r\n    const handleData = (value) => {\r\n        input.onChange(value)\r\n    }\r\n    return (\r\n        <div className={ formClass + ' form-group force-mb-10' } style={ { width: '100%' } }>\r\n            <OtpInput\r\n                value={ defaultValue || input.value }\r\n                onChange={ handleData }\r\n                numInputs={ numInputs }\r\n                separator={ <span></span> }\r\n            />\r\n            <Validations\r\n                props={ {\r\n                    touched,\r\n                    error,\r\n                    validationError,\r\n                    warning,\r\n                } }\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst renderStyleMultipleRadio = (props) => {\r\n    const {\r\n        input,\r\n        validationError,\r\n        options,\r\n        className,\r\n        defaultValue,\r\n        width,\r\n        imgWidth,\r\n        isIcons,\r\n        isColors,\r\n        fontStyled,\r\n        meta: { touched, error, warning },\r\n    } = props;\r\n    return (\r\n\r\n        <Form.Group>\r\n   \r\n                { options.map((item,index) => {\r\n                    item['imageUrl'] = item.icon?.match('http') ? item.icon : item.imageUrl\r\n                    return(\r\n                        <div key={ index } className={ `  ${ className || 'styled-radio' }` }>\r\n                            \r\n                                <input { ...input }\r\n                                    onChange={ (value) => {\r\n                                        const elm = value.currentTarget;\r\n                                        input.onChange(value || elm?.value)\r\n                                    } }\r\n                                    type=\"radio\"\r\n                                    value={ item.value }\r\n                                    checked={ item.value === (input.value || defaultValue) }\r\n                                    id={ input.name } \r\n                                    className=\"styled-radio\"\r\n                                    />\r\n                                <div className='input-radio-label'>\r\n                                        {isColors && <span className={`checkbox-colors ${item.label === 'Clean White' ? 'round-border' : null}`}>\r\n                                            {item.colors && <span style={{backgroundColor: item.colors[0]}}></span>}\r\n                                        </span>}\r\n                                        {isIcons && item.icon && !item.imageUrl &&  <span className='emojiText mb-0 mt-1' dangerouslySetInnerHTML={ { __html:  item.icon  } } />}\r\n                                        {item.imageUrl && <>\r\n                                            <img src={ item.imageUrl } className='styled-radio-img'  alt={ item.label } /></>}\r\n                                        {fontStyled ? <p  className=\"emojiText mb-0 mt-1\" dangerouslySetInnerHTML={ { __html:  item.label  } } /> : \r\n                                        <span className=\"emojiText mb-0 mt-1\" dangerouslySetInnerHTML={ { __html:  item.label  } } /> }\r\n                                        \r\n                                    \r\n                                </div>\r\n                            \r\n                        </div>)\r\n\r\n                })}\r\n\r\n            <Validations\r\n                props={ {\r\n                    touched,\r\n                    error,\r\n                    validationError,\r\n                    warning,\r\n                } }\r\n            />\r\n        </Form.Group>)\r\n}\r\nconst renderFileDrop = (props)=> {\r\n    const {\r\n        input,\r\n        //setUrl,\r\n        url,\r\n        formClass,\r\n        isDropText,\r\n        placeholder,\r\n        meta: { touched, error, warning },\r\n    } = props;\r\n\r\n    const handleDrop = (acceptedFiles) => {\r\n        acceptedFiles.forEach((file) => {\r\n            const reader = new FileReader()\r\n\r\n            reader.onabort = () => console.log('file reading was aborted')\r\n            reader.onerror = () => console.log('file reading has failed')\r\n            reader.onload = () => {\r\n                const base64 = reader.result\r\n                input.onChange(base64)\r\n                //setUrl(base64);\r\n            }\r\n           // input.onChange(file)\r\n            reader.readAsDataURL(file);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Dropzone accept=\"image/jpeg, image/png\" multiple={ false } onDrop={ acceptedFiles => handleDrop(acceptedFiles) } >\r\n                {({ getRootProps, getInputProps }) => {\r\n                    return(\r\n                        \r\n                            <div { ...getRootProps() } className={ formClass + ' avatar-user' }>\r\n                                <div className=\"c-avatar cursor-pointer upload-file\"\r\n                                    style={ {  backgroundImage: url ? `url(${ url })`: null } } >\r\n                                    <input  name={ input.name } { ...getInputProps()  } />\r\n                                    <p className='' dangerouslySetInnerHTML={{__html: placeholder}}/>\r\n                                    {isDropText ? <div className='drag-image-box'><p>{isDropText}</p></div> : null }\r\n                                </div>\r\n                            </div>\r\n                        \r\n                    )}}\r\n            </Dropzone>\r\n            <Validations\r\n                props={ {\r\n                    touched,\r\n                    error,\r\n                    warning\r\n                } }\r\n            /></>)\r\n}\r\n\r\nexport {\r\n    renderFileDrop,\r\n    renderFieldWG,\r\n    renderField,\r\n    renderOTPField,\r\n    renderStyleMultipleRadio,\r\n    renderFieldChangeWG,\r\n};","C:\\react\\webFin-frontend\\frontend\\src\\pages\\blog\\components.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\actions\\blog\\index.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\services\\unsplashClient.js",[],"C:\\react\\webFin-frontend\\frontend\\src\\components\\hoc\\AssessmentRoute.js",["371"],"import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\n\r\nimport { isLoggedIn, getUser } from '../../utils/helpers'\r\n\r\nexport const AssessmentRoute = ({ component: Component, ...rest }) => {\r\n  const user = getUser();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        (\r\n           user && user.test ? \r\n            <Redirect\r\n              to={{\r\n                pathname: '/dashboard',\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n            :\r\n          <Component {...props} /> )\r\n        \r\n      }\r\n    />\r\n  )\r\n}\r\n","C:\\react\\webFin-frontend\\frontend\\src\\reducers\\blog.js",["372"],"import { ActionTypes } from '../actions/blog/actionTypes'\r\nconst initialState = {\r\n    loading: false,\r\n    isReadyPublish: false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case ActionTypes.BLOG_CREATE:\r\n        return { ...state, loading: true ,isReadyPublish: false};\r\n      case ActionTypes.BLOG_CREATE_SUCCESS:\r\n        return { ...state,loading: false, isReadyPublish: true };\r\n      case ActionTypes.BLOG_CREATE_FAILURE:\r\n        return { ...state, loading: false, isReadyPublish: false };\r\n      case ActionTypes.PUBLISH_REQUEST:\r\n        return {...state, loading: true, isReadyPublish: false}\r\n      case ActionTypes.PUBLISH_SUCCESS:\r\n        return {...state, loading: false, isReadyPublish: false}\r\n      case ActionTypes.PUBLISH_FAILURE:\r\n        return {...state, loading: false, isReadyPublish: true}\r\n      default:\r\n        return state;\r\n    }\r\n  };",{"ruleId":"373","replacedBy":"374"},{"ruleId":"375","replacedBy":"376"},{"ruleId":"377","severity":1,"message":"378","line":14,"column":5,"nodeType":"379","endLine":14,"endColumn":7,"suggestions":"380"},{"ruleId":"381","severity":1,"message":"382","line":7,"column":1,"nodeType":"383","endLine":42,"endColumn":5},{"ruleId":"384","severity":1,"message":"385","line":33,"column":17,"nodeType":"386","messageId":"387","endLine":33,"endColumn":29},{"ruleId":"377","severity":1,"message":"388","line":37,"column":7,"nodeType":"379","endLine":37,"endColumn":38,"suggestions":"389"},{"ruleId":"390","severity":1,"message":"391","line":35,"column":17,"nodeType":"392","endLine":35,"endColumn":49},{"ruleId":"390","severity":1,"message":"391","line":73,"column":19,"nodeType":"392","endLine":73,"endColumn":46},{"ruleId":"390","severity":1,"message":"391","line":91,"column":19,"nodeType":"392","endLine":91,"endColumn":46},{"ruleId":"390","severity":1,"message":"391","line":120,"column":19,"nodeType":"392","endLine":120,"endColumn":51},{"ruleId":"384","severity":1,"message":"393","line":7,"column":31,"nodeType":"386","messageId":"387","endLine":7,"endColumn":37},{"ruleId":"384","severity":1,"message":"394","line":20,"column":8,"nodeType":"386","messageId":"387","endLine":20,"endColumn":15},{"ruleId":"390","severity":1,"message":"395","line":91,"column":49,"nodeType":"392","endLine":91,"endColumn":60},{"ruleId":"390","severity":1,"message":"391","line":149,"column":45,"nodeType":"392","endLine":149,"endColumn":48},{"ruleId":"373","replacedBy":"396"},{"ruleId":"375","replacedBy":"397"},{"ruleId":"384","severity":1,"message":"398","line":23,"column":11,"nodeType":"386","messageId":"387","endLine":23,"endColumn":27},{"ruleId":"384","severity":1,"message":"399","line":23,"column":29,"nodeType":"386","messageId":"387","endLine":23,"endColumn":48},{"ruleId":"384","severity":1,"message":"400","line":24,"column":30,"nodeType":"386","messageId":"387","endLine":24,"endColumn":50},{"ruleId":"390","severity":1,"message":"395","line":46,"column":15,"nodeType":"392","endLine":46,"endColumn":28},{"ruleId":"390","severity":1,"message":"395","line":49,"column":15,"nodeType":"392","endLine":49,"endColumn":28},{"ruleId":"390","severity":1,"message":"395","line":52,"column":15,"nodeType":"392","endLine":52,"endColumn":28},{"ruleId":"390","severity":1,"message":"395","line":55,"column":15,"nodeType":"392","endLine":55,"endColumn":28},{"ruleId":"377","severity":1,"message":"388","line":31,"column":5,"nodeType":"379","endLine":31,"endColumn":7,"suggestions":"401"},{"ruleId":"402","severity":1,"message":"403","line":20,"column":63,"nodeType":"404","messageId":"405","endLine":20,"endColumn":65},{"ruleId":"406","severity":1,"message":"407","line":59,"column":25,"nodeType":"392","endLine":59,"endColumn":50},{"ruleId":"384","severity":1,"message":"408","line":34,"column":3,"nodeType":"386","messageId":"387","endLine":34,"endColumn":7},{"ruleId":"377","severity":1,"message":"409","line":54,"column":6,"nodeType":"379","endLine":54,"endColumn":13,"suggestions":"410"},{"ruleId":"384","severity":1,"message":"411","line":261,"column":7,"nodeType":"386","messageId":"387","endLine":261,"endColumn":18},{"ruleId":"384","severity":1,"message":"412","line":9,"column":3,"nodeType":"386","messageId":"387","endLine":9,"endColumn":19},{"ruleId":"384","severity":1,"message":"413","line":11,"column":3,"nodeType":"386","messageId":"387","endLine":11,"endColumn":20},{"ruleId":"384","severity":1,"message":"414","line":12,"column":3,"nodeType":"386","messageId":"387","endLine":12,"endColumn":14},{"ruleId":"384","severity":1,"message":"415","line":13,"column":3,"nodeType":"386","messageId":"387","endLine":13,"endColumn":11},{"ruleId":"384","severity":1,"message":"416","line":14,"column":3,"nodeType":"386","messageId":"387","endLine":14,"endColumn":11},{"ruleId":"384","severity":1,"message":"417","line":15,"column":3,"nodeType":"386","messageId":"387","endLine":15,"endColumn":10},{"ruleId":"384","severity":1,"message":"418","line":16,"column":3,"nodeType":"386","messageId":"387","endLine":16,"endColumn":10},{"ruleId":"384","severity":1,"message":"419","line":17,"column":3,"nodeType":"386","messageId":"387","endLine":17,"endColumn":12},{"ruleId":"384","severity":1,"message":"420","line":18,"column":3,"nodeType":"386","messageId":"387","endLine":18,"endColumn":12},{"ruleId":"384","severity":1,"message":"421","line":19,"column":3,"nodeType":"386","messageId":"387","endLine":19,"endColumn":13},{"ruleId":"384","severity":1,"message":"422","line":20,"column":3,"nodeType":"386","messageId":"387","endLine":20,"endColumn":20},{"ruleId":"384","severity":1,"message":"423","line":21,"column":3,"nodeType":"386","messageId":"387","endLine":21,"endColumn":12},{"ruleId":"377","severity":1,"message":"424","line":34,"column":8,"nodeType":"379","endLine":34,"endColumn":12,"suggestions":"425"},{"ruleId":"377","severity":1,"message":"426","line":39,"column":21,"nodeType":"427","endLine":41,"endColumn":15},{"ruleId":"428","severity":1,"message":"429","line":110,"column":19,"nodeType":"392","endLine":110,"endColumn":77},{"ruleId":"384","severity":1,"message":"430","line":33,"column":9,"nodeType":"386","messageId":"387","endLine":33,"endColumn":23},{"ruleId":"390","severity":1,"message":"395","line":73,"column":37,"nodeType":"392","endLine":73,"endColumn":89},{"ruleId":"431","severity":1,"message":"432","line":73,"column":45,"nodeType":"433","messageId":"434","endLine":73,"endColumn":65},{"ruleId":"384","severity":1,"message":"412","line":8,"column":3,"nodeType":"386","messageId":"387","endLine":8,"endColumn":19},{"ruleId":"384","severity":1,"message":"413","line":10,"column":3,"nodeType":"386","messageId":"387","endLine":10,"endColumn":20},{"ruleId":"384","severity":1,"message":"414","line":11,"column":3,"nodeType":"386","messageId":"387","endLine":11,"endColumn":14},{"ruleId":"384","severity":1,"message":"420","line":17,"column":3,"nodeType":"386","messageId":"387","endLine":17,"endColumn":12},{"ruleId":"384","severity":1,"message":"421","line":18,"column":3,"nodeType":"386","messageId":"387","endLine":18,"endColumn":13},{"ruleId":"384","severity":1,"message":"422","line":19,"column":3,"nodeType":"386","messageId":"387","endLine":19,"endColumn":20},{"ruleId":"384","severity":1,"message":"423","line":20,"column":3,"nodeType":"386","messageId":"387","endLine":20,"endColumn":12},{"ruleId":"384","severity":1,"message":"435","line":25,"column":3,"nodeType":"386","messageId":"387","endLine":25,"endColumn":6},{"ruleId":"384","severity":1,"message":"436","line":26,"column":3,"nodeType":"386","messageId":"387","endLine":26,"endColumn":6},{"ruleId":"384","severity":1,"message":"437","line":34,"column":22,"nodeType":"386","messageId":"387","endLine":34,"endColumn":33},{"ruleId":"384","severity":1,"message":"438","line":39,"column":8,"nodeType":"386","messageId":"387","endLine":39,"endColumn":14},{"ruleId":"384","severity":1,"message":"439","line":40,"column":8,"nodeType":"386","messageId":"387","endLine":40,"endColumn":14},{"ruleId":"384","severity":1,"message":"440","line":41,"column":8,"nodeType":"386","messageId":"387","endLine":41,"endColumn":14},{"ruleId":"384","severity":1,"message":"441","line":49,"column":9,"nodeType":"386","messageId":"387","endLine":49,"endColumn":23},{"ruleId":"384","severity":1,"message":"442","line":87,"column":10,"nodeType":"386","messageId":"387","endLine":87,"endColumn":17},{"ruleId":"377","severity":1,"message":"388","line":105,"column":7,"nodeType":"379","endLine":105,"endColumn":9,"suggestions":"443"},{"ruleId":"406","severity":1,"message":"407","line":189,"column":52,"nodeType":"392","endLine":189,"endColumn":91},{"ruleId":"390","severity":1,"message":"391","line":210,"column":25,"nodeType":"392","endLine":210,"endColumn":28},{"ruleId":"390","severity":1,"message":"391","line":215,"column":25,"nodeType":"392","endLine":215,"endColumn":28},{"ruleId":"390","severity":1,"message":"391","line":220,"column":25,"nodeType":"392","endLine":220,"endColumn":28},{"ruleId":"390","severity":1,"message":"391","line":225,"column":25,"nodeType":"392","endLine":225,"endColumn":28},{"ruleId":"390","severity":1,"message":"391","line":230,"column":25,"nodeType":"392","endLine":230,"endColumn":28},{"ruleId":"390","severity":1,"message":"395","line":89,"column":48,"nodeType":"392","endLine":89,"endColumn":88},{"ruleId":"402","severity":1,"message":"403","line":83,"column":15,"nodeType":"404","messageId":"405","endLine":83,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":9,"column":1,"nodeType":"383","endLine":38,"endColumn":5},{"ruleId":"384","severity":1,"message":"444","line":6,"column":8,"nodeType":"386","messageId":"387","endLine":6,"endColumn":25},{"ruleId":"384","severity":1,"message":"394","line":18,"column":8,"nodeType":"386","messageId":"387","endLine":18,"endColumn":15},{"ruleId":"384","severity":1,"message":"445","line":21,"column":26,"nodeType":"386","messageId":"387","endLine":21,"endColumn":34},{"ruleId":"390","severity":1,"message":"395","line":69,"column":49,"nodeType":"392","endLine":69,"endColumn":60},{"ruleId":"384","severity":1,"message":"446","line":11,"column":44,"nodeType":"386","messageId":"387","endLine":11,"endColumn":49},{"ruleId":"384","severity":1,"message":"447","line":11,"column":51,"nodeType":"386","messageId":"387","endLine":11,"endColumn":55},{"ruleId":"377","severity":1,"message":"448","line":49,"column":4,"nodeType":"379","endLine":49,"endColumn":6,"suggestions":"449"},{"ruleId":"377","severity":1,"message":"388","line":60,"column":4,"nodeType":"379","endLine":60,"endColumn":28,"suggestions":"450"},{"ruleId":"390","severity":1,"message":"391","line":216,"column":15,"nodeType":"392","endLine":216,"endColumn":18},{"ruleId":"384","severity":1,"message":"451","line":25,"column":62,"nodeType":"386","messageId":"387","endLine":25,"endColumn":68},{"ruleId":"384","severity":1,"message":"452","line":25,"column":69,"nodeType":"386","messageId":"387","endLine":25,"endColumn":79},{"ruleId":"377","severity":1,"message":"453","line":33,"column":7,"nodeType":"379","endLine":33,"endColumn":9,"suggestions":"454"},{"ruleId":"390","severity":1,"message":"391","line":117,"column":45,"nodeType":"392","endLine":117,"endColumn":48},{"ruleId":"384","severity":1,"message":"435","line":8,"column":16,"nodeType":"386","messageId":"387","endLine":8,"endColumn":19},{"ruleId":"384","severity":1,"message":"455","line":86,"column":9,"nodeType":"386","messageId":"387","endLine":86,"endColumn":20},{"ruleId":"384","severity":1,"message":"456","line":184,"column":9,"nodeType":"386","messageId":"387","endLine":184,"endColumn":14},{"ruleId":"384","severity":1,"message":"457","line":185,"column":9,"nodeType":"386","messageId":"387","endLine":185,"endColumn":17},{"ruleId":"384","severity":1,"message":"458","line":4,"column":10,"nodeType":"386","messageId":"387","endLine":4,"endColumn":20},{"ruleId":"381","severity":1,"message":"382","line":7,"column":1,"nodeType":"383","endLine":24,"endColumn":5},"no-native-reassign",["459"],"no-negated-in-lhs",["460"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'assessment?.colourId', 'assessment?.domain', 'assessment?.nicheId', 'assessment?.websiteName', and 'rest.location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["461"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["462"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Footer' is defined but never used.","'preview' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["459"],["460"],"'activeProfileNav' is assigned a value but never used.","'setActiveProfileNav' is assigned a value but never used.","'setNavBarActiveClass' is assigned a value but never used.",["463"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["464"],"'BlockButton' is assigned a value but never used.","'EditSiteMenuIcon' is defined but never used.","'MarketingMenuIcon' is defined but never used.","'SubMenuIcon' is defined but never used.","'Facebook' is defined but never used.","'LinkedIn' is defined but never used.","'Twitter' is defined but never used.","'YouTube' is defined but never used.","'Instagram' is defined but never used.","'CloseIcon' is defined but never used.","'SmallRadio' is defined but never used.","'SmallRadioChecked' is defined but never used.","'OpenArrow' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'timeoutData'. Either include them or remove the dependency array.",["465"],"Assignments to the 'timeoutData' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","LogicalExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'assessmentForm' is assigned a value but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'Row' is defined but never used.","'Col' is defined but never used.","'callPublish' is defined but never used.","'media1' is defined but never used.","'media2' is defined but never used.","'media3' is defined but never used.","'isReadyPublish' is assigned a value but never used.","'rteData' is assigned a value but never used.",["466"],"'TemplateLayoutOne' is defined but never used.","'saveData' is assigned a value but never used.","'Blogs' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'assessmentData.niches', 'dispatch', and 'form.values?.nicheId'. Either include them or remove the dependency array.",["467"],["468"],"'values' is assigned a value but never used.","'anyTouched' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initialize'. Either include it or remove the dependency array.",["469"],"'handleKeyUp' is assigned a value but never used.","'width' is assigned a value but never used.","'imgWidth' is assigned a value but never used.","'isLoggedIn' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"474","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},"Update the dependencies array to be: [assessment?.colourId, assessment?.domain, assessment?.nicheId, assessment?.websiteName, rest.location.pathname]",{"range":"487","text":"488"},"Update the dependencies array to be: [dispatch, props.history.location.search]",{"range":"489","text":"490"},"Update the dependencies array to be: [dispatch]",{"range":"491","text":"492"},"Update the dependencies array to be: [props, value]",{"range":"493","text":"494"},"Update the dependencies array to be: [dispatch, timeoutData]",{"range":"495","text":"496"},{"range":"497","text":"492"},"Update the dependencies array to be: [assessmentData.niches, dispatch, form.values?.nicheId]",{"range":"498","text":"499"},"Update the dependencies array to be: [domains, domainLoading, dispatch]",{"range":"500","text":"501"},"Update the dependencies array to be: [initialize]",{"range":"502","text":"503"},[732,734],"[assessment?.colourId, assessment?.domain, assessment?.nicheId, assessment?.websiteName, rest.location.pathname]",[1707,1738],"[dispatch, props.history.location.search]",[1217,1219],"[dispatch]",[1298,1305],"[props, value]",[945,949],"[dispatch, timeoutData]",[3186,3188],[2077,2079],"[assessmentData.niches, dispatch, form.values?.nicheId]",[2321,2345],"[domains, domainLoading, dispatch]",[1086,1088],"[initialize]"]